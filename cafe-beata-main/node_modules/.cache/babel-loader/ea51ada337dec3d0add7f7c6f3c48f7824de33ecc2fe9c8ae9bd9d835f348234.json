{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { importMenuItems } from './ImportMenuItems';\nexport default {\n  name: 'ItemEditor',\n  emits: ['item-updated'],\n  data() {\n    return {\n      items: [],\n      showForm: false,\n      showCategoryForm: false,\n      newCategoryName: '',\n      newCategoryType: '',\n      newCategoryIcon: '',\n      isEditing: false,\n      editingCategoryId: null,\n      imagePreview: null,\n      isLoading: false,\n      isSaving: false,\n      notification: {\n        show: false,\n        message: '',\n        type: 'success'\n      },\n      currentItem: {\n        id: null,\n        name: '',\n        price: '',\n        category: '',\n        image: null\n      },\n      categories: [],\n      selectedCategory: 'All',\n      allItems: [],\n      hasImported: false,\n      ws: null,\n      wsConnected: false\n    };\n  },\n  methods: {\n    showNotification(message, type = 'success') {\n      this.notification = {\n        show: true,\n        message,\n        type\n      };\n      setTimeout(() => {\n        this.notification.show = false;\n      }, 3000);\n    },\n    async fetchItems() {\n      this.isLoading = true;\n      try {\n        const response = await fetch('http://localhost:8000/api/items');\n        const data = await response.json();\n        if (data.items) {\n          this.allItems = data.items;\n          this.filterItemsByCategory();\n          this.$emit('item-updated');\n        }\n      } catch (error) {\n        console.error('Error fetching items:', error);\n        this.showNotification('Failed to load items', 'error');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    toggleAddItemModal() {\n      if (!this.showForm) {\n        // Opening the form/modal\n        this.currentItem = {\n          name: '',\n          price: '',\n          category: '',\n          image: null\n        };\n        this.isEditing = false;\n      } else {\n        // Closing the form/modal - reset everything\n        this.resetForm();\n      }\n      this.showForm = !this.showForm;\n      if (!this.showForm) {\n        this.imagePreview = null;\n      }\n    },\n    editItem(item) {\n      // Set up editing mode first before opening the modal\n      this.isEditing = true;\n      this.currentItem = {\n        id: item.id,\n        name: item.name,\n        price: item.price,\n        category: item.category || '',\n        image: null\n      };\n      this.imagePreview = this.getImageUrl(item.image);\n\n      // Then open the modal\n      this.showForm = true;\n    },\n    async saveItem() {\n      if (this.isSaving) return;\n      if (!this.currentItem.category) {\n        this.showNotification('Please select a category', 'error');\n        return;\n      }\n      this.isSaving = true;\n      try {\n        const formData = new FormData();\n        formData.append('name', this.currentItem.name);\n        formData.append('price', this.currentItem.price);\n        formData.append('category', this.currentItem.category);\n        if (this.currentItem.image instanceof File) {\n          formData.append('image', this.currentItem.image);\n        }\n        const url = this.isEditing ? `http://localhost:8000/api/items/${this.currentItem.id}` : 'http://localhost:8000/api/items';\n        const method = this.isEditing ? 'PUT' : 'POST';\n        const response = await fetch(url, {\n          method,\n          body: formData\n        });\n        if (response.ok) {\n          const result = await response.json();\n          this.showNotification(this.isEditing ? 'Item updated successfully' : 'Item added successfully');\n\n          // Update local state immediately\n          const newItem = {\n            ...this.currentItem,\n            id: this.isEditing ? this.currentItem.id : result.id,\n            image: result.image_path\n          };\n          if (this.isEditing) {\n            const index = this.allItems.findIndex(item => item.id === newItem.id);\n            if (index !== -1) {\n              this.allItems = [...this.allItems.slice(0, index), newItem, ...this.allItems.slice(index + 1)];\n            }\n          } else {\n            this.allItems = [...this.allItems, newItem];\n          }\n\n          // Create initial stock record for new item\n          if (!this.isEditing) {\n            try {\n              await fetch('http://localhost:8000/api/stocks', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  item_id: result.id,\n                  quantity: 0,\n                  min_stock_level: 0\n                })\n              });\n            } catch (error) {\n              console.error('Error creating initial stock record:', error);\n            }\n          }\n          this.filterItemsByCategory();\n\n          // Emit events for both menu and stock updates\n          this.$emit('item-updated');\n          window.dispatchEvent(new CustomEvent('stock-updated'));\n\n          // Close the modal\n          this.showForm = false;\n          this.resetForm();\n\n          // Refresh items to ensure everything is in sync\n          await this.fetchItems();\n        } else {\n          const error = await response.json();\n          throw new Error(error.detail || 'Operation failed');\n        }\n      } catch (error) {\n        console.error('Error saving item:', error);\n        this.showNotification(error.message || 'Failed to save item', 'error');\n      } finally {\n        this.isSaving = false;\n      }\n    },\n    async deleteItem(itemId) {\n      if (!confirm('Are you sure you want to delete this item?')) return;\n      this.isSaving = true;\n      try {\n        const response = await fetch(`http://localhost:8000/api/items/${itemId}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          this.showNotification('Item deleted successfully');\n          this.$emit('item-updated', {\n            action: 'deleted',\n            itemId\n          });\n          const event = new CustomEvent('items-updated', {\n            detail: {\n              action: 'deleted',\n              itemId\n            }\n          });\n          window.dispatchEvent(event);\n          await this.fetchItems();\n        } else {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to delete item');\n        }\n      } catch (error) {\n        console.error('Error deleting item:', error);\n        this.showNotification(error.message || 'Failed to delete item', 'error');\n      } finally {\n        this.isSaving = false;\n      }\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.currentItem.image = file;\n        this.imagePreview = URL.createObjectURL(file);\n      }\n    },\n    cancelEdit() {\n      this.showForm = false;\n      this.resetForm();\n    },\n    resetForm() {\n      this.currentItem = {\n        id: null,\n        name: '',\n        price: '',\n        category: '',\n        image: null\n      };\n      this.imagePreview = null;\n      this.isEditing = false;\n    },\n    getImageUrl(imagePath) {\n      if (!imagePath) {\n        return require('@/assets/default.png');\n      }\n      if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\n        return imagePath;\n      }\n      if (imagePath.startsWith('/uploads/')) {\n        return `http://localhost:8000${imagePath}`;\n      }\n      if (!imagePath.includes('/')) {\n        return `http://localhost:8000/uploads/avatars/${imagePath}`;\n      }\n      return require('@/assets/default.png');\n    },\n    filterItemsByCategory() {\n      if (!this.allItems) return;\n      if (this.selectedCategory === 'All') {\n        this.items = [...this.allItems];\n      } else {\n        this.items = this.allItems.filter(item => item.category === this.selectedCategory);\n      }\n\n      // Sort items by name for consistency\n      this.items.sort((a, b) => a.name.localeCompare(b.name));\n    },\n    showCategoryModal() {\n      this.showCategoryForm = true;\n      this.newCategoryName = '';\n      this.newCategoryType = '';\n      this.newCategoryIcon = '';\n    },\n    closeCategoryModal() {\n      this.showCategoryForm = false;\n      this.newCategoryName = '';\n      this.newCategoryType = '';\n      this.newCategoryIcon = '';\n    },\n    async loadCategories() {\n      try {\n        const response = await fetch('http://localhost:8000/api/categories');\n        const data = await response.json();\n        if (data.categories) {\n          this.categories = data.categories.map(cat => ({\n            ...cat,\n            icon: cat.icon ? cat.icon : 'fas fa-circle'\n          }));\n        }\n      } catch (error) {\n        console.error('Error loading categories:', error);\n        this.showNotification('Failed to load categories', 'error');\n      }\n    },\n    async addNewCategory() {\n      if (!this.newCategoryName.trim() || !this.newCategoryType || !this.newCategoryIcon) {\n        this.showNotification('Please fill in all category fields', 'error');\n        return;\n      }\n      try {\n        const formData = new FormData();\n        formData.append('name', this.newCategoryName.trim());\n        formData.append('type', this.newCategoryType);\n        formData.append('icon', this.newCategoryIcon);\n        const url = this.editingCategoryId ? `http://localhost:8000/api/categories/${this.editingCategoryId}` : 'http://localhost:8000/api/categories';\n        const method = this.editingCategoryId ? 'PUT' : 'POST';\n        const response = await fetch(url, {\n          method,\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error('Failed to process category');\n        }\n        const result = await response.json();\n\n        // Update local categories immediately\n        if (this.editingCategoryId) {\n          const index = this.categories.findIndex(c => c.id === this.editingCategoryId);\n          if (index !== -1) {\n            this.categories = [...this.categories.slice(0, index), {\n              id: this.editingCategoryId,\n              name: this.newCategoryName.trim(),\n              type: this.newCategoryType,\n              icon: this.newCategoryIcon\n            }, ...this.categories.slice(index + 1)];\n          }\n        } else {\n          this.categories = [...this.categories, {\n            id: result.id,\n            name: this.newCategoryName.trim(),\n            type: this.newCategoryType,\n            icon: this.newCategoryIcon\n          }];\n        }\n\n        // Refresh categories and trigger updates\n        await this.loadCategories();\n        window.dispatchEvent(new CustomEvent('categories-updated'));\n        window.dispatchEvent(new CustomEvent('stock-updated'));\n        this.showNotification(this.editingCategoryId ? 'Category updated successfully' : 'Category added successfully');\n        this.resetCategoryForm();\n\n        // Force refresh of items to ensure proper category assignment\n        await this.fetchItems();\n      } catch (error) {\n        console.error('Error with category:', error);\n        this.showNotification(error.message, 'error');\n      }\n    },\n    resetCategoryForm() {\n      this.newCategoryName = '';\n      this.newCategoryType = '';\n      this.newCategoryIcon = '';\n      this.editingCategoryId = null;\n    },\n    editCategory(category) {\n      this.editingCategoryId = category.id;\n      this.newCategoryName = category.name;\n      this.newCategoryType = category.type;\n      this.newCategoryIcon = category.icon || '';\n\n      // Scroll the form into view\n      this.$nextTick(() => {\n        const form = document.querySelector('.add-category-form');\n        if (form) {\n          form.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      });\n    },\n    async deleteCategory(categoryId) {\n      if (!confirm('Are you sure you want to delete this category?')) return;\n      try {\n        const category = this.categories.find(c => c.id === categoryId);\n        if (!category) {\n          this.showNotification('Category not found', 'error');\n          return;\n        }\n\n        // Check for items using this category\n        const itemsInCategory = this.allItems.filter(item => item.category === category.name);\n        if (itemsInCategory.length > 0) {\n          const itemsList = itemsInCategory.map(item => item.name).join(', ');\n          this.showNotification(`Cannot delete category \"${category.name}\" because it has the following items: ${itemsList}. Please reassign or delete these items first.`, 'error');\n          return;\n        }\n        const response = await fetch(`http://localhost:8000/api/categories/${categoryId}`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) {\n          const contentType = response.headers.get('content-type');\n          let errorMessage = 'Failed to delete category';\n          if (contentType && contentType.includes('application/json')) {\n            const errorData = await response.json();\n            errorMessage = errorData.detail || errorMessage;\n          } else {\n            const textError = await response.text();\n            errorMessage = textError || errorMessage;\n          }\n          throw new Error(errorMessage);\n        }\n\n        // Remove the category from local state immediately\n        this.categories = this.categories.filter(c => c.id !== categoryId);\n        this.showNotification(`Category \"${category.name}\" deleted successfully`);\n        window.dispatchEvent(new CustomEvent('categories-updated'));\n      } catch (error) {\n        console.error('Error deleting category:', error);\n        this.showNotification(error.message, 'error');\n      }\n    },\n    getCategoryType(categoryName) {\n      const category = this.categories.find(cat => cat.name === categoryName);\n      return category ? category.type : null;\n    },\n    formatCategoryType(type) {\n      if (!type) return '';\n\n      // Convert underscore to space and capitalize each word\n      return type.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n    },\n    initWebSocket() {\n      const wsUrl = `ws://${window.location.hostname}:8000/ws/orders`;\n      this.ws = new WebSocket(wsUrl);\n      this.ws.onopen = () => {\n        console.log('WebSocket connected in ItemEditor');\n        this.wsConnected = true;\n        // Initial fetch of data when connection is established\n        this.fetchItems();\n        this.loadCategories();\n      };\n      this.ws.onmessage = async event => {\n        try {\n          const data = JSON.parse(event.data);\n          console.log('WebSocket message received in ItemEditor:', data);\n          if (data.type === 'stock_update') {\n            // For stock updates, update the specific item first for immediate feedback\n            // This avoids waiting for a full API call and makes the UI more responsive\n\n            // Find the item in our current list\n            const itemIndex = this.items.findIndex(item => item.id === data.item_id);\n            if (itemIndex !== -1) {\n              // Update the item directly in the array\n              const updatedItem = {\n                ...this.items[itemIndex]\n              };\n              updatedItem.stock = data.new_quantity;\n              this.$set(this.items, itemIndex, updatedItem);\n\n              // If this is the currently selected item, update it too\n              if (this.selectedItem && this.selectedItem.id === data.item_id) {\n                this.selectedItem = {\n                  ...this.selectedItem,\n                  stock: data.new_quantity\n                };\n              }\n\n              // Emit events to notify other components\n              this.$emit('item-updated');\n              window.dispatchEvent(new CustomEvent('stock-updated'));\n\n              // After immediate update, schedule a background refresh\n              setTimeout(() => {\n                this.fetchItems().catch(err => {\n                  console.error('Error refreshing items after stock update:', err);\n                });\n              }, 1000);\n            } else {\n              // If item not found in current list, do a full refresh\n              await this.fetchItems();\n              this.$emit('item-updated');\n              window.dispatchEvent(new CustomEvent('stock-updated'));\n            }\n          } else if (data.type === 'menu_update') {\n            // For menu updates, we need to refresh everything\n            await this.fetchItems();\n            await this.loadCategories();\n            this.$emit('item-updated');\n            window.dispatchEvent(new CustomEvent('stock-updated'));\n          } else if (data.type === 'category_update') {\n            // For category updates, refresh both to ensure consistency\n            await this.loadCategories();\n            await this.fetchItems();\n            window.dispatchEvent(new CustomEvent('categories-updated'));\n            window.dispatchEvent(new CustomEvent('stock-updated'));\n          }\n        } catch (error) {\n          console.error('Error processing WebSocket message in ItemEditor:', error);\n        }\n      };\n      this.ws.onclose = () => {\n        console.log('WebSocket disconnected in ItemEditor');\n        this.wsConnected = false;\n        // Try to reconnect after 5 seconds\n        setTimeout(() => {\n          this.initWebSocket();\n        }, 5000);\n      };\n      this.ws.onerror = error => {\n        console.error('WebSocket error in ItemEditor:', error);\n        this.wsConnected = false;\n      };\n    }\n  },\n  async mounted() {\n    await this.loadCategories();\n    window.addEventListener('categories-updated', this.loadCategories);\n    await this.fetchItems();\n    if (this.allItems.length === 0 && !this.hasImported) {\n      this.showNotification('Importing menu items...', 'info');\n      try {\n        await importMenuItems();\n        this.showNotification('Menu items imported successfully!', 'success');\n        this.hasImported = true;\n        await this.fetchItems();\n      } catch (error) {\n        console.error('Error importing menu:', error);\n        this.showNotification('Error importing menu items', 'error');\n      }\n    }\n    // Initialize WebSocket connection\n    this.initWebSocket();\n  },\n  beforeUnmount() {\n    window.removeEventListener('categories-updated', this.loadCategories);\n    if (this.ws) {\n      this.ws.close();\n    }\n  }\n};","map":{"version":3,"names":["importMenuItems","name","emits","data","items","showForm","showCategoryForm","newCategoryName","newCategoryType","newCategoryIcon","isEditing","editingCategoryId","imagePreview","isLoading","isSaving","notification","show","message","type","currentItem","id","price","category","image","categories","selectedCategory","allItems","hasImported","ws","wsConnected","methods","showNotification","setTimeout","fetchItems","response","fetch","json","filterItemsByCategory","$emit","error","console","toggleAddItemModal","resetForm","editItem","item","getImageUrl","saveItem","formData","FormData","append","File","url","method","body","ok","result","newItem","image_path","index","findIndex","slice","headers","JSON","stringify","item_id","quantity","min_stock_level","window","dispatchEvent","CustomEvent","Error","detail","deleteItem","itemId","confirm","action","event","handleImageUpload","file","target","files","URL","createObjectURL","cancelEdit","imagePath","require","startsWith","includes","filter","sort","a","b","localeCompare","showCategoryModal","closeCategoryModal","loadCategories","map","cat","icon","addNewCategory","trim","c","resetCategoryForm","editCategory","$nextTick","form","document","querySelector","scrollIntoView","behavior","block","deleteCategory","categoryId","find","itemsInCategory","length","itemsList","join","contentType","get","errorMessage","errorData","textError","text","getCategoryType","categoryName","formatCategoryType","split","word","charAt","toUpperCase","initWebSocket","wsUrl","location","hostname","WebSocket","onopen","log","onmessage","parse","itemIndex","updatedItem","stock","new_quantity","$set","selectedItem","catch","err","onclose","onerror","mounted","addEventListener","beforeUnmount","removeEventListener","close"],"sources":["D:\\cafe-beata-Inventory-Preorder-main\\cafe-beata-main\\src\\admin\\ItemEditor.vue"],"sourcesContent":["<template>\n  <div class=\"item-editor\">\n    <div class=\"header\">\n      <h2><i class=\"fa fa-list\"></i> Menu Item Editor</h2>\n      <div class=\"header-buttons\">\n        <button @click=\"toggleAddItemModal\" class=\"add-item-button\">\n          <i class=\"fa fa-plus\"></i> Add New Item\n        </button>\n        <button @click=\"showCategoryModal\" class=\"add-category-button\">\n          <i class=\"fa fa-tags\"></i> Manage Categories\n        </button>\n      </div>\n    </div>\n\n    <!-- Success/Error Messages -->\n    <div v-if=\"notification.show\" :class=\"['notification', notification.type]\">\n      <i :class=\"notification.type === 'success' ? 'fa fa-check-circle' : 'fa fa-exclamation-circle'\"></i>\n      {{ notification.message }}\n    </div>\n\n    <!-- Category Filter -->\n    <div class=\"category-filter\">\n      <label for=\"category-filter\"><i class=\"fa fa-filter\"></i> Filter by Category:</label>\n      <select id=\"category-filter\" v-model=\"selectedCategory\" @change=\"filterItemsByCategory\">\n        <option value=\"All\">All Categories</option>\n        <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.name\">\n          {{ category.name }} ({{ category.type }})\n        </option>\n      </select>\n    </div>\n\n    <!-- Add/Edit Item Modal Popup -->\n    <div v-if=\"showForm\" class=\"item-form-modal\">\n      <div class=\"item-form-modal-content\">\n        <div class=\"modal-header\">\n          <h3><i :class=\"isEditing ? 'fa fa-edit' : 'fa fa-plus-circle'\"></i> {{ isEditing ? 'Edit Item' : 'Add New Item' }}</h3>\n          <button @click=\"toggleAddItemModal\" class=\"close-modal-btn\">\n            <i class=\"fa fa-times\"></i>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <form @submit.prevent=\"saveItem\" class=\"form-content\">\n            <div class=\"form-group\">\n              <label for=\"itemName\">Item Name:</label>\n              <input \n                type=\"text\" \n                id=\"itemName\" \n                v-model=\"currentItem.name\" \n                required \n                class=\"form-input\"\n              />\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"itemPrice\">Price (₱):</label>\n              <input \n                type=\"number\" \n                id=\"itemPrice\" \n                v-model=\"currentItem.price\" \n                required \n                step=\"0.01\" \n                min=\"0\" \n                class=\"form-input\"\n              />\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"itemCategory\">Category:</label>\n              <select \n                id=\"itemCategory\" \n                v-model=\"currentItem.category\" \n                class=\"form-input\"\n                required\n              >\n                <option value=\"\">-- Select Category --</option>\n                <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.name\">\n                  {{ category.name }} ({{ category.type }})\n                </option>\n              </select>\n              <small class=\"form-help\">Category is required and determines where the item will appear in the menu.</small>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"itemImage\">Image:</label>\n              <input \n                type=\"file\" \n                id=\"itemImage\" \n                @change=\"handleImageUpload\" \n                accept=\"image/*\" \n                :required=\"!isEditing\"\n                class=\"form-input\"\n              />\n              <img \n                v-if=\"imagePreview\" \n                :src=\"imagePreview\" \n                class=\"image-preview\" \n                alt=\"Item preview\"\n              />\n            </div>\n\n            <div class=\"form-actions\">\n              <button type=\"submit\" class=\"save-button\" :disabled=\"isSaving\">\n                <i :class=\"isEditing ? 'fa fa-save' : 'fa fa-plus'\"></i>\n                {{ isEditing ? (isSaving ? 'Updating...' : 'Update Item') : (isSaving ? 'Adding...' : 'Add Item') }}\n              </button>\n              <button type=\"button\" @click=\"toggleAddItemModal\" class=\"cancel-button\" :disabled=\"isSaving\">\n                <i class=\"fa fa-times\"></i> Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n    <!-- Category Management Modal -->\n    <div v-if=\"showCategoryForm\" class=\"category-modal\">\n      <div class=\"category-modal-content\">\n        <div class=\"modal-header\">\n          <h3><i class=\"fa fa-tags\"></i> Manage Categories</h3>\n          <button @click=\"closeCategoryModal\" class=\"close-modal-btn\">\n            <i class=\"fa fa-times\"></i>\n          </button>\n        </div>\n        \n        <div class=\"modal-body\">\n          <!-- Add New Category Form -->\n          <form @submit.prevent=\"addNewCategory\" class=\"add-category-form\">\n            <h4>{{ editingCategoryId ? 'Edit Category' : 'Add New Category' }}</h4>\n            <div class=\"form-group\">\n              <label for=\"newCategory\">Category Name:</label>\n              <input \n                type=\"text\" \n                id=\"newCategory\" \n                v-model=\"newCategoryName\" \n                required \n                class=\"form-input\"\n                placeholder=\"Enter category name\"\n              />\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"categoryType\">Category Type:</label>\n              <select \n                id=\"categoryType\" \n                v-model=\"newCategoryType\" \n                required \n                class=\"form-input\"\n              >\n                <option value=\"\">Select Type</option>\n                <option value=\"drinks\">Drinks</option>\n                <option value=\"food\">Food</option>\n                <option value=\"ready_made\">Ready Made</option>\n              </select>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"categoryIcon\">Category Icon:</label>\n              <select \n                id=\"categoryIcon\" \n                v-model=\"newCategoryIcon\" \n                required \n                class=\"form-input\"\n              >\n                <option value=\"\">Select Icon</option>\n                <!-- Drink Icons -->\n                <option value=\"fas fa-coffee\">☕ Coffee</option>\n                <option value=\"fas fa-mug-hot\">🍵 Hot Drink</option>\n                <option value=\"fas fa-glass-martini\">🥤 Cold Drink</option>\n                <option value=\"fas fa-glass-whiskey\">🥛 Milk Tea</option>\n                <option value=\"fas fa-wine-glass-alt\">🍷 Beverage</option>\n                <option value=\"fas fa-blender\">🥤 Smoothie</option>\n                <!-- Food Icons -->\n                <option value=\"fas fa-utensils\">🍽️ Main Dish</option>\n                <option value=\"fas fa-bread-slice\">🍞 Bread & Pastry</option>\n                <option value=\"fas fa-hamburger\">🍔 Burger & Sandwich</option>\n                <option value=\"fas fa-pizza-slice\">🍕 Pizza & Snacks</option>\n                <option value=\"fas fa-cookie\">🍪 Cookies & Sweets</option>\n                <option value=\"fas fa-ice-cream\">🍨 Dessert</option>\n                <option value=\"fas fa-egg\">🍳 Breakfast</option>\n                <option value=\"fas fa-cheese\">🧀 Appetizer</option>\n                <option value=\"fas fa-bacon\">🥓 Side Dish</option>\n                <option value=\"fas fa-drumstick-bite\">🍗 Rice Meal</option>\n                <option value=\"fas fa-fish\">🐟 Seafood</option>\n                <option value=\"fas fa-leaf\">🥗 Salad & Veggies</option>\n                <option value=\"fas fa-pepper-hot\">🌶️ Spicy Dish</option>\n                <option value=\"fas fa-birthday-cake\">🎂 Cake</option>\n                <!-- Ready Made Icons -->\n                <option value=\"fas fa-shopping-basket\">🧺 Ready Made</option>\n                <option value=\"fas fa-box\">📦 Packaged</option>\n                <option value=\"fas fa-store\">🏪 Convenience</option>\n                <option value=\"fas fa-boxes\">📦 Retail Products</option>\n              </select>\n              <div class=\"icon-preview\" v-if=\"newCategoryIcon\">\n                <i :class=\"newCategoryIcon\"></i>\n                <span>Icon Preview</span>\n              </div>\n            </div>\n\n            <div class=\"form-actions\">\n              <button type=\"submit\" class=\"save-button\">\n                <i :class=\"editingCategoryId ? 'fa fa-save' : 'fa fa-plus'\"></i>\n                {{ editingCategoryId ? 'Update Category' : 'Add Category' }}\n              </button>\n              <button v-if=\"editingCategoryId\" type=\"button\" @click=\"resetCategoryForm\" class=\"cancel-button\">\n                <i class=\"fa fa-times\"></i> Cancel Edit\n              </button>\n            </div>\n          </form>\n\n          <!-- Existing Categories List -->\n          <div class=\"categories-list\">\n            <h4>Existing Categories</h4>\n            <div v-for=\"category in categories\" :key=\"category.id\" class=\"category-item\">\n              <div class=\"category-info\">\n                <i :class=\"category.icon\"></i>\n                <span>{{ category.name }}</span>\n                <span class=\"category-type\">{{ formatCategoryType(category.type) }}</span>\n              </div>\n              <div class=\"category-actions\">\n                <button @click=\"editCategory(category)\" class=\"edit-category-btn\">\n                  <i class=\"fa fa-edit\"></i>\n                </button>\n                <button @click=\"deleteCategory(category.id)\" class=\"delete-category-btn\">\n                  <i class=\"fa fa-trash\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Items List -->\n    <div v-if=\"isLoading\" class=\"loading\">\n      <i class=\"fa fa-spinner fa-spin\"></i> Loading items...\n    </div>\n    <div v-else class=\"items-list\">\n      <div v-for=\"item in items\" :key=\"item.id\" class=\"item-card\">\n        <img :src=\"getImageUrl(item.image)\" :alt=\"item.name\" class=\"item-image\"/>\n        <div class=\"item-info\">\n          <h4>{{ item.name }}</h4>\n          <p class=\"item-price\">₱{{ Number(item.price).toFixed(2) }}</p>\n          <p v-if=\"item.category\" class=\"item-category\">\n            <i class=\"fa fa-tag\"></i> \n            {{ item.category }}\n            <span class=\"category-type\" v-if=\"getCategoryType(item.category)\">\n              ({{ formatCategoryType(getCategoryType(item.category)) }})\n            </span>\n          </p>\n        </div>\n        <div class=\"item-actions\">\n          <button @click=\"editItem(item)\" class=\"edit-button\" :disabled=\"isSaving\">\n            <i class=\"fa fa-edit\"></i>\n          </button>\n          <button @click=\"deleteItem(item.id)\" class=\"delete-button\" :disabled=\"isSaving\">\n            <i class=\"fa fa-trash\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { importMenuItems } from './ImportMenuItems';\n\nexport default {\n  name: 'ItemEditor',\n  emits: ['item-updated'],\n  data() {\n    return {\n      items: [],\n      showForm: false,\n      showCategoryForm: false,\n      newCategoryName: '',\n      newCategoryType: '',\n      newCategoryIcon: '',\n      isEditing: false,\n      editingCategoryId: null,\n      imagePreview: null,\n      isLoading: false,\n      isSaving: false,\n      notification: {\n        show: false,\n        message: '',\n        type: 'success'\n      },\n      currentItem: {\n        id: null,\n        name: '',\n        price: '',\n        category: '',\n        image: null\n      },\n      categories: [],\n      selectedCategory: 'All',\n      allItems: [],\n      hasImported: false,\n      ws: null,\n      wsConnected: false,\n    }\n  },\n  methods: {\n    showNotification(message, type = 'success') {\n      this.notification = {\n        show: true,\n        message,\n        type\n      };\n      setTimeout(() => {\n        this.notification.show = false;\n      }, 3000);\n    },\n    async fetchItems() {\n      this.isLoading = true;\n      try {\n        const response = await fetch('http://localhost:8000/api/items');\n        const data = await response.json();\n        if (data.items) {\n          this.allItems = data.items;\n          this.filterItemsByCategory();\n          this.$emit('item-updated');\n        }\n      } catch (error) {\n        console.error('Error fetching items:', error);\n        this.showNotification('Failed to load items', 'error');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    toggleAddItemModal() {\n      if (!this.showForm) {\n        // Opening the form/modal\n        this.currentItem = {\n          name: '',\n          price: '',\n          category: '',\n          image: null\n        };\n        this.isEditing = false;\n      } else {\n        // Closing the form/modal - reset everything\n        this.resetForm();\n      }\n      this.showForm = !this.showForm;\n      if (!this.showForm) {\n        this.imagePreview = null;\n      }\n    },\n    editItem(item) {\n      // Set up editing mode first before opening the modal\n      this.isEditing = true;\n      this.currentItem = { \n        id: item.id,\n        name: item.name,\n        price: item.price,\n        category: item.category || '',\n        image: null\n      };\n      this.imagePreview = this.getImageUrl(item.image);\n      \n      // Then open the modal\n      this.showForm = true;\n    },\n    async saveItem() {\n      if (this.isSaving) return;\n      \n      if (!this.currentItem.category) {\n        this.showNotification('Please select a category', 'error');\n        return;\n      }\n      \n      this.isSaving = true;\n\n      try {\n        const formData = new FormData();\n        formData.append('name', this.currentItem.name);\n        formData.append('price', this.currentItem.price);\n        formData.append('category', this.currentItem.category);\n        \n        if (this.currentItem.image instanceof File) {\n          formData.append('image', this.currentItem.image);\n        }\n\n        const url = this.isEditing \n          ? `http://localhost:8000/api/items/${this.currentItem.id}`\n          : 'http://localhost:8000/api/items';\n        \n        const method = this.isEditing ? 'PUT' : 'POST';\n        \n        const response = await fetch(url, {\n          method,\n          body: formData\n        });\n\n        if (response.ok) {\n          const result = await response.json();\n          this.showNotification(this.isEditing ? 'Item updated successfully' : 'Item added successfully');\n          \n          // Update local state immediately\n          const newItem = {\n            ...this.currentItem,\n            id: this.isEditing ? this.currentItem.id : result.id,\n            image: result.image_path\n          };\n          \n          if (this.isEditing) {\n            const index = this.allItems.findIndex(item => item.id === newItem.id);\n            if (index !== -1) {\n              this.allItems = [\n                ...this.allItems.slice(0, index),\n                newItem,\n                ...this.allItems.slice(index + 1)\n              ];\n            }\n          } else {\n            this.allItems = [...this.allItems, newItem];\n          }\n          \n          // Create initial stock record for new item\n          if (!this.isEditing) {\n            try {\n              await fetch('http://localhost:8000/api/stocks', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                  item_id: result.id,\n                  quantity: 0,\n                  min_stock_level: 0\n                })\n              });\n            } catch (error) {\n              console.error('Error creating initial stock record:', error);\n            }\n          }\n          \n          this.filterItemsByCategory();\n          \n          // Emit events for both menu and stock updates\n          this.$emit('item-updated');\n          window.dispatchEvent(new CustomEvent('stock-updated'));\n          \n          // Close the modal\n          this.showForm = false;\n          this.resetForm();\n          \n          // Refresh items to ensure everything is in sync\n          await this.fetchItems();\n        } else {\n          const error = await response.json();\n          throw new Error(error.detail || 'Operation failed');\n        }\n      } catch (error) {\n        console.error('Error saving item:', error);\n        this.showNotification(error.message || 'Failed to save item', 'error');\n      } finally {\n        this.isSaving = false;\n      }\n    },\n    async deleteItem(itemId) {\n      if (!confirm('Are you sure you want to delete this item?')) return;\n      \n      this.isSaving = true;\n      try {\n        const response = await fetch(`http://localhost:8000/api/items/${itemId}`, {\n          method: 'DELETE'\n        });\n        \n        if (response.ok) {\n          this.showNotification('Item deleted successfully');\n          \n          this.$emit('item-updated', {\n            action: 'deleted',\n            itemId\n          });\n          \n          const event = new CustomEvent('items-updated', { \n            detail: { \n              action: 'deleted',\n              itemId\n            } \n          });\n          window.dispatchEvent(event);\n          \n          await this.fetchItems();\n        } else {\n          const error = await response.json();\n          throw new Error(error.detail || 'Failed to delete item');\n        }\n      } catch (error) {\n        console.error('Error deleting item:', error);\n        this.showNotification(error.message || 'Failed to delete item', 'error');\n      } finally {\n        this.isSaving = false;\n      }\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.currentItem.image = file;\n        this.imagePreview = URL.createObjectURL(file);\n      }\n    },\n    cancelEdit() {\n      this.showForm = false;\n      this.resetForm();\n    },\n    resetForm() {\n      this.currentItem = {\n        id: null,\n        name: '',\n        price: '',\n        category: '',\n        image: null\n      };\n      this.imagePreview = null;\n      this.isEditing = false;\n    },\n    getImageUrl(imagePath) {\n      if (!imagePath) {\n        return require('@/assets/default.png');\n      }\n      \n      if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\n        return imagePath;\n      }\n      \n      if (imagePath.startsWith('/uploads/')) {\n        return `http://localhost:8000${imagePath}`;\n      }\n      \n      if (!imagePath.includes('/')) {\n        return `http://localhost:8000/uploads/avatars/${imagePath}`;\n      }\n      \n      return require('@/assets/default.png');\n    },\n    filterItemsByCategory() {\n      if (!this.allItems) return;\n      \n      if (this.selectedCategory === 'All') {\n        this.items = [...this.allItems];\n      } else {\n        this.items = this.allItems.filter(item => item.category === this.selectedCategory);\n      }\n      \n      // Sort items by name for consistency\n      this.items.sort((a, b) => a.name.localeCompare(b.name));\n    },\n    showCategoryModal() {\n      this.showCategoryForm = true;\n      this.newCategoryName = '';\n      this.newCategoryType = '';\n      this.newCategoryIcon = '';\n    },\n    closeCategoryModal() {\n      this.showCategoryForm = false;\n      this.newCategoryName = '';\n      this.newCategoryType = '';\n      this.newCategoryIcon = '';\n    },\n    async loadCategories() {\n      try {\n        const response = await fetch('http://localhost:8000/api/categories');\n        const data = await response.json();\n        if (data.categories) {\n          this.categories = data.categories.map(cat => ({\n            ...cat,\n            icon: cat.icon ? cat.icon : 'fas fa-circle'\n          }));\n        }\n      } catch (error) {\n        console.error('Error loading categories:', error);\n        this.showNotification('Failed to load categories', 'error');\n      }\n    },\n    async addNewCategory() {\n      if (!this.newCategoryName.trim() || !this.newCategoryType || !this.newCategoryIcon) {\n        this.showNotification('Please fill in all category fields', 'error');\n        return;\n      }\n\n      try {\n        const formData = new FormData();\n        formData.append('name', this.newCategoryName.trim());\n        formData.append('type', this.newCategoryType);\n        formData.append('icon', this.newCategoryIcon);\n\n        const url = this.editingCategoryId \n          ? `http://localhost:8000/api/categories/${this.editingCategoryId}`\n          : 'http://localhost:8000/api/categories';\n\n        const method = this.editingCategoryId ? 'PUT' : 'POST';\n        \n        const response = await fetch(url, {\n          method,\n          body: formData\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to process category');\n        }\n\n        const result = await response.json();\n\n        // Update local categories immediately\n        if (this.editingCategoryId) {\n          const index = this.categories.findIndex(c => c.id === this.editingCategoryId);\n          if (index !== -1) {\n            this.categories = [\n              ...this.categories.slice(0, index),\n              {\n                id: this.editingCategoryId,\n                name: this.newCategoryName.trim(),\n                type: this.newCategoryType,\n                icon: this.newCategoryIcon\n              },\n              ...this.categories.slice(index + 1)\n            ];\n          }\n        } else {\n          this.categories = [...this.categories, {\n            id: result.id,\n            name: this.newCategoryName.trim(),\n            type: this.newCategoryType,\n            icon: this.newCategoryIcon\n          }];\n        }\n\n        // Refresh categories and trigger updates\n        await this.loadCategories();\n        window.dispatchEvent(new CustomEvent('categories-updated'));\n        window.dispatchEvent(new CustomEvent('stock-updated'));\n        \n        this.showNotification(\n          this.editingCategoryId ? 'Category updated successfully' : 'Category added successfully'\n        );\n        this.resetCategoryForm();\n        \n        // Force refresh of items to ensure proper category assignment\n        await this.fetchItems();\n      } catch (error) {\n        console.error('Error with category:', error);\n        this.showNotification(error.message, 'error');\n      }\n    },\n    resetCategoryForm() {\n      this.newCategoryName = '';\n      this.newCategoryType = '';\n      this.newCategoryIcon = '';\n      this.editingCategoryId = null;\n    },\n    editCategory(category) {\n      this.editingCategoryId = category.id;\n      this.newCategoryName = category.name;\n      this.newCategoryType = category.type;\n      this.newCategoryIcon = category.icon || '';\n      \n      // Scroll the form into view\n      this.$nextTick(() => {\n        const form = document.querySelector('.add-category-form');\n        if (form) {\n          form.scrollIntoView({ behavior: 'smooth', block: 'start' });\n        }\n      });\n    },\n    async deleteCategory(categoryId) {\n      if (!confirm('Are you sure you want to delete this category?')) return;\n\n      try {\n        const category = this.categories.find(c => c.id === categoryId);\n        if (!category) {\n          this.showNotification('Category not found', 'error');\n          return;\n        }\n\n        // Check for items using this category\n        const itemsInCategory = this.allItems.filter(item => item.category === category.name);\n        if (itemsInCategory.length > 0) {\n          const itemsList = itemsInCategory.map(item => item.name).join(', ');\n          this.showNotification(\n            `Cannot delete category \"${category.name}\" because it has the following items: ${itemsList}. Please reassign or delete these items first.`,\n            'error'\n          );\n          return;\n        }\n\n        const response = await fetch(`http://localhost:8000/api/categories/${categoryId}`, {\n          method: 'DELETE'\n        });\n\n        if (!response.ok) {\n          const contentType = response.headers.get('content-type');\n          let errorMessage = 'Failed to delete category';\n          \n          if (contentType && contentType.includes('application/json')) {\n            const errorData = await response.json();\n            errorMessage = errorData.detail || errorMessage;\n          } else {\n            const textError = await response.text();\n            errorMessage = textError || errorMessage;\n          }\n          \n          throw new Error(errorMessage);\n        }\n\n        // Remove the category from local state immediately\n        this.categories = this.categories.filter(c => c.id !== categoryId);\n        \n        this.showNotification(`Category \"${category.name}\" deleted successfully`);\n        window.dispatchEvent(new CustomEvent('categories-updated'));\n      } catch (error) {\n        console.error('Error deleting category:', error);\n        this.showNotification(error.message, 'error');\n      }\n    },\n    getCategoryType(categoryName) {\n      const category = this.categories.find(cat => cat.name === categoryName);\n      return category ? category.type : null;\n    },\n    formatCategoryType(type) {\n      if (!type) return '';\n      \n      // Convert underscore to space and capitalize each word\n      return type.split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n    },\n    initWebSocket() {\n      const wsUrl = `ws://${window.location.hostname}:8000/ws/orders`;\n      this.ws = new WebSocket(wsUrl);\n      \n      this.ws.onopen = () => {\n        console.log('WebSocket connected in ItemEditor');\n        this.wsConnected = true;\n        // Initial fetch of data when connection is established\n        this.fetchItems();\n        this.loadCategories();\n      };\n      \n      this.ws.onmessage = async (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          console.log('WebSocket message received in ItemEditor:', data);\n\n          if (data.type === 'stock_update') {\n            // For stock updates, update the specific item first for immediate feedback\n            // This avoids waiting for a full API call and makes the UI more responsive\n            \n            // Find the item in our current list\n            const itemIndex = this.items.findIndex(item => item.id === data.item_id);\n            if (itemIndex !== -1) {\n              // Update the item directly in the array\n              const updatedItem = {...this.items[itemIndex]};\n              updatedItem.stock = data.new_quantity;\n              this.$set(this.items, itemIndex, updatedItem);\n              \n              // If this is the currently selected item, update it too\n              if (this.selectedItem && this.selectedItem.id === data.item_id) {\n                this.selectedItem = {...this.selectedItem, stock: data.new_quantity};\n              }\n              \n              // Emit events to notify other components\n              this.$emit('item-updated');\n              window.dispatchEvent(new CustomEvent('stock-updated'));\n              \n              // After immediate update, schedule a background refresh\n              setTimeout(() => {\n                this.fetchItems().catch(err => {\n                  console.error('Error refreshing items after stock update:', err);\n                });\n              }, 1000);\n            } else {\n              // If item not found in current list, do a full refresh\n              await this.fetchItems();\n              this.$emit('item-updated');\n              window.dispatchEvent(new CustomEvent('stock-updated'));\n            }\n          } else if (data.type === 'menu_update') {\n            // For menu updates, we need to refresh everything\n            await this.fetchItems();\n            await this.loadCategories();\n            this.$emit('item-updated');\n            window.dispatchEvent(new CustomEvent('stock-updated'));\n          } else if (data.type === 'category_update') {\n            // For category updates, refresh both to ensure consistency\n            await this.loadCategories();\n            await this.fetchItems();\n            window.dispatchEvent(new CustomEvent('categories-updated'));\n            window.dispatchEvent(new CustomEvent('stock-updated'));\n          }\n        } catch (error) {\n          console.error('Error processing WebSocket message in ItemEditor:', error);\n        }\n      };\n      \n      this.ws.onclose = () => {\n        console.log('WebSocket disconnected in ItemEditor');\n        this.wsConnected = false;\n        // Try to reconnect after 5 seconds\n        setTimeout(() => {\n          this.initWebSocket();\n        }, 5000);\n      };\n      \n      this.ws.onerror = (error) => {\n        console.error('WebSocket error in ItemEditor:', error);\n        this.wsConnected = false;\n      };\n    },\n  },\n  async mounted() {\n    await this.loadCategories();\n    window.addEventListener('categories-updated', this.loadCategories);\n    await this.fetchItems();\n    \n    if (this.allItems.length === 0 && !this.hasImported) {\n      this.showNotification('Importing menu items...', 'info');\n      try {\n        await importMenuItems();\n        this.showNotification('Menu items imported successfully!', 'success');\n        this.hasImported = true;\n        await this.fetchItems();\n      } catch (error) {\n        console.error('Error importing menu:', error);\n        this.showNotification('Error importing menu items', 'error');\n      }\n    }\n    // Initialize WebSocket connection\n    this.initWebSocket();\n  },\n  beforeUnmount() {\n    window.removeEventListener('categories-updated', this.loadCategories);\n    if (this.ws) {\n      this.ws.close();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.item-editor {\n  padding: 20px;\n  background: white;\n  border-radius: 20px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n  padding-bottom: 20px;\n  border-bottom: 2px solid #f0f0f0;\n}\n\n.header h2 {\n  color: #d12f7a;\n  font-size: 28px;\n  font-weight: 600;\n  margin: 0;\n}\n\n.header-buttons {\n  display: flex;\n  gap: 15px;\n}\n\n.add-item-button {\n  background: #d12f7a;\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 12px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 6px rgba(209, 47, 122, 0.2);\n}\n\n.add-item-button:hover {\n  background: #b82d67;\n  transform: translateY(-2px);\n  box-shadow: 0 6px 8px rgba(209, 47, 122, 0.3);\n}\n\n.add-item-button i {\n  font-size: 18px;\n}\n\n.add-category-button {\n  background: #4CAF50;\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 12px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 6px rgba(76, 175, 80, 0.2);\n}\n\n.add-category-button:hover {\n  background: #45a049;\n  transform: translateY(-2px);\n  box-shadow: 0 6px 8px rgba(76, 175, 80, 0.3);\n}\n\n/* Category Filter */\n.category-filter {\n  margin-bottom: 30px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.category-filter label {\n  font-weight: 500;\n  color: #666;\n}\n\n.category-filter select {\n  padding: 10px 15px;\n  border: 2px solid #e0e0e0;\n  border-radius: 10px;\n  font-size: 15px;\n  color: #333;\n  background: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  min-width: 200px;\n}\n\n.category-filter select:hover {\n  border-color: #d12f7a;\n}\n\n.category-filter select:focus {\n  outline: none;\n  border-color: #d12f7a;\n  box-shadow: 0 0 0 3px rgba(209, 47, 122, 0.1);\n}\n\n/* Item Form */\n.item-form {\n  /* Remove or comment out the old item-form styles since we're now using a modal */\n  /* These styles can be safely removed or adjusted to work with our new modal */\n  display: none; /* Hide the old form style */\n}\n\n/* Keep the rest of the styles for inputs, etc. */\n\n/* Items List */\n.items-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 25px;\n  margin-top: 30px;\n}\n\n.item-card {\n  background: white;\n  border-radius: 15px;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  position: relative;\n}\n\n.item-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);\n}\n\n.item-image {\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n}\n\n.item-info {\n  padding: 20px;\n}\n\n.item-info h4 {\n  margin: 0;\n  font-size: 18px;\n  color: #333;\n  font-weight: 600;\n}\n\n.item-price {\n  color: #d12f7a;\n  font-size: 18px;\n  font-weight: 600;\n  margin: 8px 0;\n}\n\n.item-category {\n  color: #666;\n  font-size: 14px;\n  margin: 5px 0 0;\n}\n\n.item-actions {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: flex;\n  gap: 8px;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.item-card:hover .item-actions {\n  opacity: 1;\n}\n\n.edit-button, .delete-button {\n  width: 40px;\n  height: 40px;\n  border: none;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  backdrop-filter: blur(5px);\n}\n\n.edit-button {\n  background: rgba(255, 255, 255, 0.9);\n  color: #4CAF50;\n}\n\n.edit-button:hover {\n  background: #4CAF50;\n  color: white;\n  transform: rotate(15deg);\n}\n\n.delete-button {\n  background: rgba(255, 255, 255, 0.9);\n  color: #f44336;\n}\n\n.delete-button:hover {\n  background: #f44336;\n  color: white;\n  transform: rotate(-15deg);\n}\n\n/* Notifications */\n.notification {\n  padding: 15px 25px;\n  border-radius: 12px;\n  margin-bottom: 25px;\n  text-align: center;\n  font-weight: 500;\n  animation: slideIn 0.3s ease;\n}\n\n.notification.success {\n  background: #4CAF50;\n  color: white;\n}\n\n.notification.error {\n  background: #f44336;\n  color: white;\n}\n\n/* Loading State */\n.loading {\n  text-align: center;\n  padding: 40px;\n  color: #666;\n  font-size: 18px;\n}\n\n/* Disabled States */\nbutton:disabled {\n  opacity: 0.7;\n  cursor: not-allowed;\n  transform: none !important;\n}\n\n/* Animations */\n@keyframes slideIn {\n  from {\n    transform: translateY(-20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .header {\n    flex-direction: column;\n    gap: 15px;\n    text-align: center;\n  }\n\n  .header-buttons {\n    flex-direction: column;\n  }\n\n  .add-item-button,\n  .add-category-button {\n    width: 100%;\n  }\n\n  .items-list {\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  }\n\n  .form-actions {\n    flex-direction: column;\n  }\n\n  .save-button, .cancel-button {\n    width: 100%;\n  }\n\n  .category-modal-content {\n    width: 95%;\n    margin: 10px;\n  }\n}\n\n@media (max-width: 480px) {\n  .item-editor {\n    padding: 15px;\n  }\n\n  .item-form {\n    padding: 20px;\n  }\n\n  .items-list {\n    grid-template-columns: 1fr;\n  }\n}\n\n/* Category Modal */\n.category-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.category-modal-content {\n  background: white;\n  border-radius: 15px;\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  border-bottom: 1px solid #eee;\n}\n\n.modal-header h3 {\n  margin: 0;\n  color: #333;\n}\n\n.modal-body {\n  padding: 20px;\n}\n\n.add-category-form {\n  margin-bottom: 30px;\n}\n\n.categories-list {\n  margin-top: 20px;\n}\n\n.categories-list h4 {\n  margin-bottom: 15px;\n  color: #333;\n}\n\n.category-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  background: #f8f8f8;\n  border-radius: 8px;\n  margin-bottom: 8px;\n}\n\n.delete-category-btn {\n  background: none;\n  border: none;\n  color: #f44336;\n  cursor: pointer;\n  padding: 5px;\n  border-radius: 5px;\n  transition: all 0.3s ease;\n}\n\n.delete-category-btn:hover {\n  background: rgba(244, 67, 54, 0.1);\n  color: #d32f2f;\n  transform: scale(1.1);\n}\n\n.icon-preview {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-top: 10px;\n  padding: 10px;\n  background: #f8f8f8;\n  border-radius: 8px;\n}\n\n.icon-preview i {\n  font-size: 24px;\n  color: #d12f7a;\n}\n\n.category-info {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.category-type {\n  font-size: 12px;\n  padding: 2px 8px;\n  border-radius: 12px;\n  background: #f0f0f0;\n  color: #666;\n}\n\n.category-info i {\n  width: 20px;\n  text-align: center;\n  color: #d12f7a;\n}\n\n/* Add these new styles */\n.category-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.edit-category-btn {\n  background: none;\n  border: none;\n  color: #4CAF50;\n  cursor: pointer;\n  padding: 5px;\n  border-radius: 5px;\n  transition: all 0.3s ease;\n}\n\n.edit-category-btn:hover {\n  background: rgba(76, 175, 80, 0.1);\n  color: #45a049;\n  transform: scale(1.1);\n}\n\n.form-actions {\n  display: flex;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.add-category-form h4 {\n  color: #d12f7a;\n  margin-bottom: 20px;\n}\n\n/* Add/Edit Item Modal Styles */\n.item-form-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  backdrop-filter: blur(4px);\n}\n\n.item-form-modal-content {\n  background-color: white;\n  border-radius: 8px;\n  width: 90%;\n  max-width: 600px;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\n  animation: slideIn 0.3s ease;\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #d12f7a;\n  color: white;\n  padding: 15px 20px;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n}\n\n.modal-header h3 {\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.close-modal-btn {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 18px;\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: background-color 0.2s;\n}\n\n.close-modal-btn:hover {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.modal-body {\n  padding: 20px;\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateY(-20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n/* Adjust existing item-form styles to work with the modal */\n.form-content {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n/* Form styles for the modal */\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: #444;\n}\n\n.form-input {\n  width: 85%;\n  padding: 12px 15px;\n  border: 2px solid #e0e0e0;\n  border-radius: 10px;\n  font-size: 15px;\n  transition: all 0.3s ease;\n}\n\n.form-input:hover {\n  border-color: #d12f7a;\n}\n\n.form-input:focus {\n  outline: none;\n  border-color: #d12f7a;\n  box-shadow: 0 0 0 3px rgba(209, 47, 122, 0.1);\n}\n\n.form-help {\n  color: #666;\n  font-size: 13px;\n  margin-top: 5px;\n}\n\n/* Image Preview */\n.image-preview {\n  max-width: 200px;\n  max-height: 200px;\n  border-radius: 10px;\n  margin-top: 15px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n/* Form Actions */\n.form-actions {\n  display: flex;\n  gap: 15px;\n  margin-top: 30px;\n}\n\n.save-button, .cancel-button {\n  padding: 12px 24px;\n  border: none;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.save-button {\n  background: #d12f7a;\n  color: white;\n  flex: 1;\n}\n\n.save-button:hover {\n  background: #b82d67;\n  transform: translateY(-2px);\n}\n\n.cancel-button {\n  background: #f0f0f0;\n  color: #666;\n  padding: 12px 30px;\n}\n\n.cancel-button:hover {\n  background: #e0e0e0;\n  transform: translateY(-2px);\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}