{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, withModifiers as _withModifiers, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, createBlock as _createBlock } from \"vue\";\nimport _imports_0 from '@/assets/cafe-logo1.png';\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"user-profile-section\"\n};\nconst _hoisted_3 = {\n  class: \"profile-image\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"profile-info\"\n};\nconst _hoisted_6 = {\n  class: \"user-name\"\n};\nconst _hoisted_7 = {\n  class: \"utility-section\"\n};\nconst _hoisted_8 = {\n  class: \"menu-section\"\n};\nconst _hoisted_9 = {\n  class: \"menu-items\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"menu-items\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  class: \"menu-category\"\n};\nconst _hoisted_14 = [\"disabled\"];\nconst _hoisted_15 = {\n  class: \"menu-items\"\n};\nconst _hoisted_16 = {\n  class: \"logout-container\"\n};\nconst _hoisted_17 = {\n  class: \"top-bar\"\n};\nconst _hoisted_18 = {\n  class: \"centered-content\"\n};\nconst _hoisted_19 = {\n  class: \"search-container\"\n};\nconst _hoisted_20 = {\n  class: \"top-controls\"\n};\nconst _hoisted_21 = {\n  class: \"live-time\"\n};\nconst _hoisted_22 = {\n  key: 0,\n  class: \"floating-cart-badge\"\n};\nconst _hoisted_23 = {\n  class: \"category-header\"\n};\nconst _hoisted_24 = {\n  key: 0,\n  class: \"loading-indicator\"\n};\nconst _hoisted_25 = {\n  class: \"items\"\n};\nconst _hoisted_26 = [\"onClick\"];\nconst _hoisted_27 = {\n  class: \"item-image-container\"\n};\nconst _hoisted_28 = [\"src\", \"alt\"];\nconst _hoisted_29 = {\n  key: 0,\n  class: \"inventory-badge\",\n  title: \"From Inventory System\"\n};\nconst _hoisted_30 = {\n  class: \"item-details\"\n};\nconst _hoisted_31 = {\n  class: \"item-price\"\n};\nconst _hoisted_32 = {\n  key: 2,\n  class: \"no-items\"\n};\nconst _hoisted_33 = {\n  key: 3,\n  class: \"item-modal\"\n};\nconst _hoisted_34 = {\n  class: \"modal-content\"\n};\nconst _hoisted_35 = {\n  class: \"modal-item-details\"\n};\nconst _hoisted_36 = {\n  class: \"modal-image-container\"\n};\nconst _hoisted_37 = [\"src\", \"alt\"];\nconst _hoisted_38 = {\n  key: 0,\n  class: \"inventory-badge-modal\",\n  title: \"From Inventory System\"\n};\nconst _hoisted_39 = {\n  class: \"price\"\n};\nconst _hoisted_40 = {\n  class: \"modal-quantity-controls\"\n};\nconst _hoisted_41 = {\n  class: \"quantity-display\"\n};\nconst _hoisted_42 = {\n  class: \"total-price\"\n};\nconst _hoisted_43 = {\n  class: \"modal-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UserNotifications = _resolveComponent(\"UserNotifications\");\n  const _component_StockIndicator = _resolveComponent(\"StockIndicator\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Sidebar Toggle Button (For Mobile) \"), _createElementVNode(\"button\", {\n    class: \"menu-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleSidebar && $options.toggleSidebar(...args))\n  }, _cache[23] || (_cache[23] = [_createElementVNode(\"div\", {\n    class: \"menu-icon-container\"\n  }, \" ≡ \", -1 /* HOISTED */)])), _cache[41] || (_cache[41] = _createElementVNode(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\"\n  }, null, -1 /* HOISTED */)), $data.isSidebarOpen ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"overlay\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.closeSidebar && $options.closeSidebar(...args))\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Sidebar \"), _createElementVNode(\"div\", {\n    class: _normalizeClass(['sidebar', {\n      'open': $data.isSidebarOpen,\n      'light-mode': !$data.isDarkMode,\n      'dark-mode': $data.isDarkMode\n    }]),\n    onClick: _cache[11] || (_cache[11] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"button\", {\n    class: \"close-sidebar\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.toggleSidebar && $options.toggleSidebar(...args))\n  }, \"✕\"), _createCommentVNode(\" User Profile Section \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Use the same method for getting avatar as in UserProfileCafe \"), _createElementVNode(\"img\", {\n    src: $options.getAvatarUrl($data.userAvatar),\n    alt: \"Profile Picture\"\n  }, null, 8 /* PROPS */, _hoisted_4)]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", _hoisted_6, _toDisplayString($data.userName), 1 /* TEXT */)])]), _createCommentVNode(\" Dark Mode Toggle beside profile \"), _createElementVNode(\"button\", {\n    class: \"theme-toggle\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.toggleDarkMode && $options.toggleDarkMode(...args))\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass(['fas', $data.isDarkMode ? 'fa-sun' : 'fa-moon', {\n      'light-icon': !$data.isDarkMode,\n      'dark-icon': $data.isDarkMode\n    }])\n  }, null, 2 /* CLASS */)]), _createCommentVNode(\" Profile Section \"), _createElementVNode(\"button\", {\n    class: \"profile-section\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.handleProfile && $options.handleProfile(...args))\n  }, _cache[24] || (_cache[24] = [_createElementVNode(\"i\", {\n    class: \"fas fa-user\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"Profile\", -1 /* HOISTED */)])), _cache[33] || (_cache[33] = _createElementVNode(\"hr\", {\n    class: \"utility-divider\"\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" Utility Buttons Section \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    class: \"utility-button\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.handleOrderHistory && $options.handleOrderHistory(...args))\n  }, _cache[25] || (_cache[25] = [_createElementVNode(\"i\", {\n    class: \"fas fa-history\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"Order History\", -1 /* HOISTED */)])), _createCommentVNode(\" Other utility buttons can be added here if needed \")]), _createCommentVNode(\" Categories \"), _createElementVNode(\"div\", _hoisted_8, [_cache[30] || (_cache[30] = _createElementVNode(\"h3\", null, \"Drinks\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    class: \"menu-item\",\n    onClick: _cache[6] || (_cache[6] = $event => $options.filterCategory('All Drinks'))\n  }, _cache[26] || (_cache[26] = [_createElementVNode(\"i\", {\n    class: \"fas fa-coffee\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"All Drinks\", -1 /* HOISTED */)])), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.drinkCategories, category => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: category,\n      class: \"menu-item\",\n      onClick: $event => $options.filterCategory(category)\n    }, [_createElementVNode(\"i\", {\n      class: _normalizeClass($options.getCategoryIcon(category))\n    }, null, 2 /* CLASS */), _createElementVNode(\"span\", null, _toDisplayString(category), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_10);\n  }), 128 /* KEYED_FRAGMENT */))]), _cache[31] || (_cache[31] = _createElementVNode(\"h3\", null, \"Food\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    class: \"menu-item\",\n    onClick: _cache[7] || (_cache[7] = $event => $options.filterCategory('All Food'))\n  }, _cache[27] || (_cache[27] = [_createElementVNode(\"i\", {\n    class: \"fas fa-utensils\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"All Food\", -1 /* HOISTED */)])), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.foodCategories, category => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: category,\n      class: \"menu-item\",\n      onClick: $event => $options.filterCategory(category)\n    }, [_createElementVNode(\"i\", {\n      class: _normalizeClass($options.getCategoryIcon(category))\n    }, null, 2 /* CLASS */), _createElementVNode(\"span\", null, _toDisplayString(category), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_12);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_13, [_createCommentVNode(\" Ready Made Products Section \"), _createElementVNode(\"h3\", null, [_cache[28] || (_cache[28] = _createTextVNode(\" Ready Made Items \")), $data.isAdmin ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"sync-button prominent\",\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.syncInventoryProducts && $options.syncInventoryProducts(...args)),\n    disabled: $data.isSyncing,\n    title: \"Pull latest Ready Made products from Inventory System\"\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass($data.isSyncing ? 'fas fa-sync fa-spin' : 'fas fa-sync')\n  }, null, 2 /* CLASS */), _createElementVNode(\"span\", null, _toDisplayString($data.isSyncing ? 'Syncing...' : 'Sync Inventory'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_14)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"button\", {\n    class: \"menu-item\",\n    onClick: _cache[9] || (_cache[9] = $event => $options.filterCategory('All Ready Made'))\n  }, _cache[29] || (_cache[29] = [_createElementVNode(\"i\", {\n    class: \"fas fa-shopping-basket\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"Ready Made\", -1 /* HOISTED */)])), _createCommentVNode(\" Remove the v-for for readyMadeCategories since we just need a single entry \")])])]), _createCommentVNode(\" Logout Button \"), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n    class: \"utility-button logout\",\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.handleLogout && $options.handleLogout(...args))\n  }, _cache[32] || (_cache[32] = [_createElementVNode(\"i\", {\n    class: \"fas fa-sign-out-alt\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"Logout\", -1 /* HOISTED */)]))])], 2 /* CLASS */), _createCommentVNode(\" Main content area \"), _createElementVNode(\"div\", {\n    class: _normalizeClass(['content', {\n      'close': $data.isSidebarOpen\n    }]),\n    onClick: _cache[22] || (_cache[22] = (...args) => $options.closeSidebar && $options.closeSidebar(...args))\n  }, [_createCommentVNode(\" Top Bar \"), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_cache[34] || (_cache[34] = _createElementVNode(\"div\", {\n    class: \"logo-container\"\n  }, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"University Logo\",\n    class: \"logo logo-light\"\n  }), _createElementVNode(\"div\", {\n    class: \"cafe-title\"\n  }, \"Cafe Beata\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_19, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.searchQuery = $event),\n    placeholder: \"Search our Drinks and Food\",\n    onInput: _cache[13] || (_cache[13] = (...args) => $options.filterItems && $options.filterItems(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.searchQuery]])]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, _toDisplayString($data.currentTime), 1 /* TEXT */), _createCommentVNode(\" Add UserNotifications component inside top bar \"), _createVNode(_component_UserNotifications)])])]), _createCommentVNode(\" Floating Cart Button - keep this outside the top bar \"), _createElementVNode(\"div\", {\n    class: \"floating-cart\",\n    onClick: _cache[14] || (_cache[14] = (...args) => $options.goToCart && $options.goToCart(...args))\n  }, [_cache[35] || (_cache[35] = _createElementVNode(\"i\", {\n    class: \"fas fa-shopping-cart\"\n  }, null, -1 /* HOISTED */)), $data.cartItemCount > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_22, _toDisplayString($data.cartItemCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Dashboard Title \"), _cache[40] || (_cache[40] = _createElementVNode(\"h1\", {\n    class: \"dashboard-title\"\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" Display category title dynamically \"), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"h2\", null, _toDisplayString($data.currentCategory === 'All Drinks' ? 'Menu' : $data.currentCategory === 'All Ready Made' ? 'Ready Made Items' : $data.currentCategory), 1 /* TEXT */)]), _createCommentVNode(\" Loading indicator \"), $data.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, _cache[36] || (_cache[36] = [_createElementVNode(\"p\", null, \"Loading menu items...\", -1 /* HOISTED */)]))) : $data.filteredItems.length ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Display filtered items based on the current category \"), _createElementVNode(\"div\", _hoisted_25, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id || item.name,\n      class: _normalizeClass([\"item\", {\n        'out-of-stock': !$data.itemStocks[item.id]?.quantity,\n        'inventory-item': $options.isInventoryItemStyled(item)\n      }]),\n      onClick: $event => $options.checkAndNavigate(item)\n    }, [_createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"img\", {\n      src: $options.getImagePath(item.image),\n      alt: item.name,\n      onError: _cache[15] || (_cache[15] = (...args) => $options.handleImageError && $options.handleImageError(...args))\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_28), $options.isInventoryItem(item) && $options.isInventoryItemStyled(item) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [...(_cache[37] || (_cache[37] = [_createElementVNode(\"i\", {\n      class: \"fas fa-box-open\"\n    }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"Inventory\", -1 /* HOISTED */)]))])) : _createCommentVNode(\"v-if\", true)]), $data.itemStocks[item.id] ? (_openBlock(), _createBlock(_component_StockIndicator, {\n      key: 0,\n      itemId: item.id,\n      quantity: $data.itemStocks[item.id]?.quantity || 0,\n      minStockLevel: 10\n    }, null, 8 /* PROPS */, [\"itemId\", \"quantity\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"span\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_31, \"₱\" + _toDisplayString(Number(item.price).toFixed(2)), 1 /* TEXT */)])], 10 /* CLASS, PROPS */, _hoisted_26);\n  }), 128 /* KEYED_FRAGMENT */))])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_32, _cache[38] || (_cache[38] = [_createElementVNode(\"p\", null, \"No items found in this category.\", -1 /* HOISTED */)]))), _createCommentVNode(\" Item Click Modal \"), $data.showItemModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [_createElementVNode(\"div\", _hoisted_34, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[16] || (_cache[16] = (...args) => $options.closeItemModal && $options.closeItemModal(...args))\n  }, \"×\"), _createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"img\", {\n    src: $data.selectedItem ? $options.getImagePath($data.selectedItem.image) : require('@/assets/default.png'),\n    alt: $data.selectedItem ? $data.selectedItem.name : '',\n    onError: _cache[17] || (_cache[17] = (...args) => $options.handleImageError && $options.handleImageError(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_37), $data.selectedItem && $options.isInventoryItem($data.selectedItem) && $options.isInventoryItemStyled($data.selectedItem) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, _cache[39] || (_cache[39] = [_createElementVNode(\"i\", {\n    class: \"fas fa-box-open\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"Inventory Item\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"h3\", null, _toDisplayString($data.selectedItem ? $data.selectedItem.name : ''), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_39, \"₱\" + _toDisplayString($data.selectedItem ? Number($data.selectedItem.price).toFixed(2) : '0.00'), 1 /* TEXT */), _createCommentVNode(\" Add quantity controls \"), _createElementVNode(\"div\", _hoisted_40, [_createElementVNode(\"button\", {\n    onClick: _cache[18] || (_cache[18] = (...args) => $options.decreaseModalQuantity && $options.decreaseModalQuantity(...args)),\n    class: \"quantity-btn\"\n  }, \"-\"), _createElementVNode(\"span\", _hoisted_41, _toDisplayString($data.modalQuantity), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[19] || (_cache[19] = (...args) => $options.increaseModalQuantity && $options.increaseModalQuantity(...args)),\n    class: \"quantity-btn\"\n  }, \"+\")]), _createElementVNode(\"p\", _hoisted_42, \"Total: ₱\" + _toDisplayString($data.selectedItem ? (Number($data.selectedItem.price) * $data.modalQuantity).toFixed(2) : '0.00'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_43, [_createElementVNode(\"button\", {\n    onClick: _cache[20] || (_cache[20] = (...args) => $options.addToCart && $options.addToCart(...args)),\n    class: \"add-cart-btn\"\n  }, \"Add to Cart\"), _createElementVNode(\"button\", {\n    onClick: _cache[21] || (_cache[21] = (...args) => $options.orderNow && $options.orderNow(...args)),\n    class: \"order-now-btn\"\n  }, \"Order Now\")])])])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */)]);\n}","map":{"version":3,"names":["_imports_0","class","key","title","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","onClick","_cache","args","$options","toggleSidebar","rel","href","$data","isSidebarOpen","closeSidebar","_normalizeClass","isDarkMode","_withModifiers","_hoisted_2","_hoisted_3","src","getAvatarUrl","userAvatar","alt","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","userName","toggleDarkMode","handleProfile","_hoisted_7","handleOrderHistory","_hoisted_8","_hoisted_9","$event","filterCategory","_Fragment","_renderList","drinkCategories","category","getCategoryIcon","_hoisted_10","_hoisted_11","foodCategories","_hoisted_12","_hoisted_13","_createTextVNode","isAdmin","syncInventoryProducts","disabled","isSyncing","_hoisted_14","_hoisted_15","_hoisted_16","handleLogout","_hoisted_17","_hoisted_18","_hoisted_19","type","searchQuery","placeholder","onInput","filterItems","_hoisted_20","_hoisted_21","currentTime","_createVNode","_component_UserNotifications","goToCart","cartItemCount","_hoisted_22","_hoisted_23","currentCategory","isLoading","_hoisted_24","filteredItems","length","_hoisted_25","item","id","name","itemStocks","quantity","isInventoryItemStyled","checkAndNavigate","_hoisted_27","getImagePath","image","onError","handleImageError","_hoisted_28","isInventoryItem","_hoisted_29","_createBlock","_component_StockIndicator","itemId","minStockLevel","_hoisted_30","_hoisted_31","Number","price","toFixed","_hoisted_26","_hoisted_32","showItemModal","_hoisted_33","_hoisted_34","closeItemModal","_hoisted_35","_hoisted_36","selectedItem","require","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","decreaseModalQuantity","_hoisted_41","modalQuantity","increaseModalQuantity","_hoisted_42","_hoisted_43","addToCart","orderNow"],"sources":["D:\\cafe-beata-Inventory-Preorder-main\\cafe-beata-main\\src\\components\\DashboardPage.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <!-- Sidebar Toggle Button (For Mobile) -->\n    <button class=\"menu-button\" @click=\"toggleSidebar\">\n      <div class=\"menu-icon-container\">\n        ≡\n      </div>\n    </button>\n\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\n    \n    <div v-if=\"isSidebarOpen\" class=\"overlay\" @click=\"closeSidebar\"></div>\n    \n    <!-- Sidebar -->\n    <div :class=\"['sidebar', { \n      'open': isSidebarOpen, \n      'light-mode': !isDarkMode,\n      'dark-mode': isDarkMode \n    }]\" @click.stop>\n      <button class=\"close-sidebar\" @click=\"toggleSidebar\">✕</button>\n      \n      <!-- User Profile Section -->\n      <div class=\"user-profile-section\">\n        <div class=\"profile-image\">\n          <!-- Use the same method for getting avatar as in UserProfileCafe -->\n          <img :src=\"getAvatarUrl(userAvatar)\" alt=\"Profile Picture\">\n        </div>\n        <div class=\"profile-info\">\n          <span class=\"user-name\">{{ userName }}</span>\n        </div>\n      </div>\n\n      <!-- Dark Mode Toggle beside profile -->\n      <button class=\"theme-toggle\" @click=\"toggleDarkMode\">\n        <i :class=\"['fas', isDarkMode ? 'fa-sun' : 'fa-moon', { 'light-icon': !isDarkMode, 'dark-icon': isDarkMode }]\"></i>\n      </button>\n\n      <!-- Profile Section -->\n      <button class=\"profile-section\" @click=\"handleProfile\">\n        <i class=\"fas fa-user\"></i>\n        <span>Profile</span>\n      </button>\n\n      <hr class=\"utility-divider\">\n\n      <!-- Utility Buttons Section -->\n      <div class=\"utility-section\">\n        <button class=\"utility-button\" @click=\"handleOrderHistory\">\n          <i class=\"fas fa-history\"></i>\n          <span>Order History</span>\n        </button>\n        \n        <!-- Other utility buttons can be added here if needed -->\n      </div>\n\n      <!-- Categories -->\n      <div class=\"menu-section\">\n        <h3>Drinks</h3>\n        <div class=\"menu-items\">\n          <button \n            class=\"menu-item\" \n            @click=\"filterCategory('All Drinks')\"\n          >\n            <i class=\"fas fa-coffee\"></i>\n            <span>All Drinks</span>\n          </button>\n          <button \n            v-for=\"category in drinkCategories\" \n            :key=\"category\"\n            class=\"menu-item\" \n            @click=\"filterCategory(category)\"\n          >\n            <i :class=\"getCategoryIcon(category)\"></i>\n            <span>{{ category }}</span>\n          </button>\n        </div>\n\n        <h3>Food</h3>\n        <div class=\"menu-items\">\n          <button \n            class=\"menu-item\" \n            @click=\"filterCategory('All Food')\"\n          >\n            <i class=\"fas fa-utensils\"></i>\n            <span>All Food</span>\n          </button>\n          <button \n            v-for=\"category in foodCategories\" \n            :key=\"category\"\n            class=\"menu-item\" \n            @click=\"filterCategory(category)\"\n          >\n            <i :class=\"getCategoryIcon(category)\"></i>\n            <span>{{ category }}</span>\n          </button>\n        </div>\n        \n        <div class=\"menu-category\">\n          <!-- Ready Made Products Section -->\n          <h3>\n            Ready Made Items\n            <button \n              v-if=\"isAdmin\" \n              class=\"sync-button prominent\" \n              @click=\"syncInventoryProducts\" \n              :disabled=\"isSyncing\"\n              title=\"Pull latest Ready Made products from Inventory System\"\n            >\n              <i :class=\"isSyncing ? 'fas fa-sync fa-spin' : 'fas fa-sync'\"></i>\n              <span>{{ isSyncing ? 'Syncing...' : 'Sync Inventory' }}</span>\n            </button>\n          </h3>\n          <div class=\"menu-items\">\n            <button \n              class=\"menu-item\" \n              @click=\"filterCategory('All Ready Made')\"\n            >\n              <i class=\"fas fa-shopping-basket\"></i>\n              <span>Ready Made</span>\n            </button>\n            <!-- Remove the v-for for readyMadeCategories since we just need a single entry -->\n          </div>\n        </div>\n      </div>\n\n      <!-- Logout Button -->\n      <div class=\"logout-container\">\n        <button class=\"utility-button logout\" @click=\"handleLogout\">\n          <i class=\"fas fa-sign-out-alt\"></i>\n          <span>Logout</span>\n        </button>\n      </div>\n    </div>\n\n    <!-- Main content area -->\n    <div :class=\"['content', { 'close': isSidebarOpen }]\" @click=\"closeSidebar\">\n      <!-- Top Bar -->\n      <div class=\"top-bar\">\n        <div class=\"centered-content\">\n          <div class=\"logo-container\">\n            <img src=\"@/assets/cafe-logo1.png\" alt=\"University Logo\" class=\"logo logo-light\" />\n            <div class=\"cafe-title\">Cafe Beata</div>\n          </div>\n          \n          <div class=\"search-container\">\n            <input\n              type=\"text\"\n              v-model=\"searchQuery\"\n              placeholder=\"Search our Drinks and Food\"\n              @input=\"filterItems\"\n            />\n          </div>\n          \n          <div class=\"top-controls\">\n            <div class=\"live-time\">{{ currentTime }}</div>\n            <!-- Add UserNotifications component inside top bar -->\n            <UserNotifications />\n          </div>\n        </div>\n      </div>\n      \n      <!-- Floating Cart Button - keep this outside the top bar -->\n      <div class=\"floating-cart\" @click=\"goToCart\">\n        <i class=\"fas fa-shopping-cart\"></i>\n        <span v-if=\"cartItemCount > 0\" class=\"floating-cart-badge\">{{ cartItemCount }}</span>\n      </div>\n\n      <!-- Dashboard Title -->\n      <h1 class=\"dashboard-title\"></h1>\n      \n\n      <!-- Display category title dynamically -->\n      <div class=\"category-header\">\n        <h2>{{ \n          currentCategory === 'All Drinks' ? 'Menu' : \n          currentCategory === 'All Ready Made' ? 'Ready Made Items' : \n          currentCategory \n        }}</h2>\n      </div>\n\n      <!-- Loading indicator -->\n      <div v-if=\"isLoading\" class=\"loading-indicator\">\n        <p>Loading menu items...</p>\n      </div>\n\n      <!-- Display filtered items based on the current category -->\n      <div v-else-if=\"filteredItems.length\" class=\"items\">\n        <div\n          v-for=\"item in filteredItems\"\n          :key=\"item.id || item.name\"\n          class=\"item\"\n          @click=\"checkAndNavigate(item)\"\n          :class=\"{\n            'out-of-stock': !itemStocks[item.id]?.quantity,\n            'inventory-item': isInventoryItemStyled(item)\n          }\"\n        >\n          <div class=\"item-image-container\">\n            <img \n              :src=\"getImagePath(item.image)\" \n              :alt=\"item.name\" \n              @error=\"handleImageError\" \n            />\n            <div v-if=\"isInventoryItem(item) && isInventoryItemStyled(item)\" class=\"inventory-badge\" title=\"From Inventory System\">\n              <i class=\"fas fa-box-open\"></i>\n              <span>Inventory</span>\n            </div>\n          </div>\n          <StockIndicator \n            v-if=\"itemStocks[item.id]\"\n            :itemId=\"item.id\" \n            :quantity=\"itemStocks[item.id]?.quantity || 0\" \n            :minStockLevel=\"10\"\n          />\n          <div class=\"item-details\">\n            <span>{{ item.name }}</span>\n            <span class=\"item-price\">₱{{ Number(item.price).toFixed(2) }}</span>\n          </div>\n        </div>\n      </div>\n      <div v-else class=\"no-items\">\n        <p>No items found in this category.</p>\n      </div>\n\n      <!-- Item Click Modal -->\n      <div v-if=\"showItemModal\" class=\"item-modal\">\n        <div class=\"modal-content\">\n          <span class=\"close\" @click=\"closeItemModal\">&times;</span>\n          <div class=\"modal-item-details\">\n            <div class=\"modal-image-container\">\n              <img \n                :src=\"selectedItem ? getImagePath(selectedItem.image) : require('@/assets/default.png')\" \n                :alt=\"selectedItem ? selectedItem.name : ''\" \n                @error=\"handleImageError\"\n              />\n              <div v-if=\"selectedItem && isInventoryItem(selectedItem) && isInventoryItemStyled(selectedItem)\" class=\"inventory-badge-modal\" title=\"From Inventory System\">\n                <i class=\"fas fa-box-open\"></i>\n                <span>Inventory Item</span>\n              </div>\n            </div>\n            <h3>{{ selectedItem ? selectedItem.name : '' }}</h3>\n            <p class=\"price\">₱{{ selectedItem ? Number(selectedItem.price).toFixed(2) : '0.00' }}</p>\n            \n            <!-- Add quantity controls -->\n            <div class=\"modal-quantity-controls\">\n              <button @click=\"decreaseModalQuantity\" class=\"quantity-btn\">-</button>\n              <span class=\"quantity-display\">{{ modalQuantity }}</span>\n              <button @click=\"increaseModalQuantity\" class=\"quantity-btn\">+</button>\n            </div>\n            <p class=\"total-price\">Total: ₱{{ selectedItem ? (Number(selectedItem.price) * modalQuantity).toFixed(2) : '0.00' }}</p>\n          </div>\n          <div class=\"modal-buttons\">\n            <button @click=\"addToCart\" class=\"add-cart-btn\">Add to Cart</button>\n            <button @click=\"orderNow\" class=\"order-now-btn\">Order Now</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\nimport StockIndicator from './StockIndicator.vue';\n// Import UserNotifications component\nimport UserNotifications from '@/components/UserNotifications.vue';\nimport { eventBus } from \"@/utils/eventBus\";\n\nexport default {\n  components: {\n    StockIndicator,\n    UserNotifications\n  },\n  data() {\n    return {\n      userName: '',\n      userProfileImage: '',\n      userEmail: localStorage.getItem('userEmail'),\n      itemsRefreshInterval: null,\n      searchQuery: '',\n      isDarkMode: localStorage.getItem(\"darkMode\") === \"true\",\n      currentCategory: 'All Drinks',\n      currentTime: new Date().toLocaleTimeString(),\n      isSidebarOpen: false,\n      isLoading: false,\n      apiItems: [],\n      filteredItems: [],\n      categories: [],\n      showItemModal: false,\n      selectedItem: null,\n      cartItemCount: 0,\n      cart: [], // Array to store cart items\n      modalQuantity: 1,\n      itemStocks: {}, // Add back the itemStocks property\n      ws: null,\n      wsConnected: false,\n      isAdmin: localStorage.getItem('role') === 'admin',\n      isSyncing: false,\n      userAvatar: '', // Add this property to store the user's avatar URL\n      unreadNotificationsCount: 0,\n    };\n  },\n\n  \n\n  created() {\n    // Just listen for notification updates to sync with UserNotifications\n    window.addEventListener(\"notificationUpdated\", this.handleNotificationUpdate);\n    window.addEventListener(\"items-updated\", this.handleItemsUpdated);\n    this.initWebSocket();\n  },\n  \n  beforeUnmount() {\n    // Remove listeners\n    window.removeEventListener(\"notificationUpdated\", this.handleNotificationUpdate);\n    window.removeEventListener(\"items-updated\", this.handleItemsUpdated);\n    window.removeEventListener('categories-updated', this.handleCategoriesUpdated);\n    this.stopPollingForItems();\n    window.removeEventListener('storage', this.updateCartCount);\n    if (this.ws) {\n      this.ws.close();\n    }\n  },\n  \n  async mounted() {\n    // Watch for notification updates through eventBus for UI updates\n    this.$watch(() => eventBus.notificationsCount, (newCount) => {\n      console.log('Notification count updated:', newCount);\n      // No need to store locally as UserNotifications manages this\n    });\n    \n    // Check for last viewed category first\n    const lastViewedCategory = localStorage.getItem('lastViewedCategory');\n    if (lastViewedCategory) {\n      this.currentCategory = lastViewedCategory;\n    } else if (this.$route.query.category) {\n      // Only use route query if no last viewed category exists\n      this.currentCategory = this.$route.query.category;\n    }\n    \n    this.updateTime();\n    this.applyDarkMode(this.isDarkMode);\n    await this.loadUserProfile();\n    \n    // Initialize WebSocket first for real-time updates\n    this.initWebSocket();\n    \n    // Load initial data\n    await this.fetchItems();\n    this.startPollingForItems();\n    await this.loadCategories();\n    \n    // Trigger a sync of inventory products when the component mounts\n    // This ensures the latest Ready Made products are available\n    try {\n      if (!this.isSyncing) {\n        console.log('Triggering inventory sync on component mount');\n        await this.syncInventoryProducts();\n      }\n    } catch (error) {\n      console.error('Error syncing inventory on mount:', error);\n    }\n    \n    // Filter items after loading everything\n    this.filterItems();\n    \n    window.addEventListener('categories-updated', this.handleCategoriesUpdated);\n    this.updateCartCount();\n    window.addEventListener('storage', this.updateCartCount);\n  },\n    \n \n  methods: {\n    // Handle notification updates\n    handleNotificationUpdate() {\n      // This event is fired when notifications are updated\n      // The UserNotifications component already manages the badge state\n      console.log('Notification update detected');\n    },\n    \n    // Handle item updates from ItemEditor\n    handleItemsUpdated(event) {\n      console.log('Items updated event received:', event.detail);\n      \n      // Silently refresh items without showing loading indicators\n      try {\n        fetch('http://localhost:8000/api/items')\n          .then(response => response.json())\n          .then(data => {\n            if (data.items) {\n              this.apiItems = data.items;\n              this.filterItems();\n            }\n          });\n      } catch (error) {\n        console.error('Error refreshing items after update:', error);\n      }\n      \n      // Only switch to the category if the user is not on the \"All Drinks\" view\n      // This way, new items will appear in the All Drinks view without changing the user's context\n      if (this.currentCategory !== 'All Drinks' && event.detail.action !== 'deleted' && \n          event.detail.category && event.detail.category !== this.currentCategory) {\n        this.currentCategory = event.detail.category;\n      }\n    },\n    \n    // New method to manually refresh items\n    async refreshItems() {\n      this.isLoading = true;\n      await this.fetchItems();\n      this.filterItems();\n      this.isLoading = false;\n    },\n    \n    // New method to start polling for items\n    startPollingForItems() {\n      this.itemsRefreshInterval = setInterval(async () => {\n        // Fetch items silently in the background without showing loading indicators\n        try {\n          const response = await fetch('http://localhost:8000/api/items');\n          const data = await response.json();\n          if (data.items) {\n            this.apiItems = data.items;\n            // Update filtered items without changing the loading state\n            this.filterItems();\n          }\n        } catch (error) {\n          console.error('Error fetching items during background refresh:', error);\n        }\n      }, 10000); // Check for new items every 10 seconds\n    },\n    \n    // New method to stop polling for items\n    stopPollingForItems() {\n      if (this.itemsRefreshInterval) {\n        clearInterval(this.itemsRefreshInterval);\n      }\n    },\n    \n    // New method to fetch items from API\n    async fetchItems() {\n      const wasLoading = this.isLoading;\n      \n      try {\n        const [itemsResponse, stocksResponse] = await Promise.all([\n          fetch('http://localhost:8000/api/items'),\n          fetch('http://localhost:8000/api/stocks')\n        ]);\n        \n        const itemsData = await itemsResponse.json();\n        const stocksData = await stocksResponse.json();\n        \n        if (itemsData.items) {\n          this.apiItems = itemsData.items;\n          \n          // Debug log for inventory items\n          const inventoryItems = this.apiItems.filter(item => item.external_source === 'inventory');\n          console.log(`Found ${inventoryItems.length} items from inventory system:`, \n                      inventoryItems.map(item => ({ id: item.id, name: item.name, category: item.category })));\n        }\n        \n        if (stocksData.success) {\n          // Convert array to object for easier lookup\n          this.itemStocks = stocksData.items.reduce((acc, stock) => {\n            acc[stock.item_id] = stock;\n            return acc;\n          }, {});\n        }\n        \n        if (!wasLoading) {\n          this.filterItems();\n        }\n      } catch (error) {\n        console.error('Error fetching items or stocks:', error);\n      } finally {\n        if (wasLoading) {\n          this.isLoading = false;\n        }\n      }\n    },\n\n    async loadUserProfile() {\n      const userName = localStorage.getItem('userName');\n      const userEmail = localStorage.getItem('userEmail');\n      if (userName) {\n        this.userName = userName;\n        \n        // Fetch profile data from the server to get avatar\n        if (userEmail) {\n          try {\n            const response = await fetch(`http://127.0.0.1:8000/profile/${encodeURIComponent(userEmail)}`);\n            const data = await response.json();\n            if (response.ok) {\n              // Set the avatar from the profile data\n              this.userAvatar = data.avatar || '';\n            }\n          } catch (error) {\n            console.error('Error loading profile:', error);\n            // Fall back to the avatar service if profile loading fails\n          }\n        }\n      } else {\n        // If no username, redirect to login\n        this.$router.push({ name: 'Login' });\n      }\n    },\n\n    // toggleDarkMode is the next method after removing the notification related methods\n    toggleDarkMode() {\n      this.isDarkMode = !this.isDarkMode;\n      localStorage.setItem(\"darkMode\", this.isDarkMode ? \"enabled\" : \"disabled\");\n      this.applyDarkMode(this.isDarkMode);\n    },\n\n    applyDarkMode(isDark) {\n      if (isDark) {\n        document.body.classList.add('dark-mode');\n      } else {\n        document.body.classList.remove('dark-mode');\n      }\n    },\n\n    updateTime() {\n      setInterval(() => {\n        const now = new Date();\n        let hours = now.getHours();\n        let minutes = now.getMinutes();\n        let seconds = now.getSeconds();\n        let ampm = hours >= 12 ? 'PM' : 'AM';\n\n        hours = hours % 12 || 12; // Convert 24-hour time to 12-hour format\n        minutes = minutes < 10 ? '0' + minutes : minutes; // Ensure two digits for minutes\n        seconds = seconds < 10 ? '0' + seconds : seconds; // Ensure two digits for seconds\n\n        this.currentTime = `${hours}:${minutes}:${seconds} ${ampm}`; // Example: 2:03:11 PM\n      }, 1000); // Update every second\n    },\n\n    filterCategory(category) {\n      this.currentCategory = category;\n      // Save the selected category\n      localStorage.setItem('lastViewedCategory', category);\n      this.filterItems();\n      \n      // Close sidebar on mobile after selecting a category\n      if (window.innerWidth <= 768) {\n        this.closeSidebar();\n      }\n    },\n\n    getImagePath(imagePath) {\n      // If there's no image path, use a default image\n      if (!imagePath) {\n        return require('@/assets/default.png');\n      }\n      \n      // Check if this is an inventory system item (using port 8001)\n      if (imagePath.includes('localhost:8001') || (this.selectedItem && this.isInventoryItem(this.selectedItem))) {\n        console.log('Inventory image path:', imagePath);\n        \n        // Check if the path needs to be fixed - it should point to /uploads/products/\n        if (imagePath.includes('/uploads/') && !imagePath.includes('/uploads/products/')) {\n          // Extract the filename\n          const parts = imagePath.split('/');\n          const filename = parts[parts.length - 1];\n          const fixedPath = `http://localhost:8001/uploads/products/${filename}`;\n          console.log('Fixed inventory image path:', fixedPath);\n          return fixedPath;\n        }\n        \n        // If it's already a full URL to the inventory system, use it directly\n        if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\n          return imagePath;\n        }\n        \n        // For simple filenames in inventory system\n        if (!imagePath.includes('/')) {\n          return `http://localhost:8001/uploads/products/${imagePath}`;\n        }\n        \n        return imagePath;\n      }\n      \n      // For cafe-beata system (regular menu items)\n      \n      // If it's already a full URL, use it directly\n      if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\n        return imagePath;\n      }\n      \n      // For cafe-beata system uploads with /uploads/ path\n      if (imagePath.startsWith('/uploads/')) {\n        return `http://localhost:8000${imagePath}`;\n      }\n      \n      // For simple filenames in cafe-beata system\n      if (!imagePath.includes('/')) {\n        return `http://localhost:8000/uploads/${imagePath}`;\n      }\n      \n      // Default fallback\n      return require('@/assets/default.png');\n    },\n\n    filterItems() {\n      const query = this.searchQuery.toLowerCase();\n      \n      // Add debug log for all inventory items\n      const inventoryItems = this.apiItems.filter(item => item.external_source === 'inventory');\n      console.log(`Total inventory items in database: ${inventoryItems.length}`);\n      if (inventoryItems.length > 0) {\n        console.log(\"Inventory items:\", inventoryItems.map(item => ({ id: item.id, name: item.name })));\n      }\n      \n      // Filter API items based on category and search query\n      if (this.currentCategory === 'All Drinks') {\n        // For \"All Drinks\", exclude all inventory items\n        this.filteredItems = this.apiItems.filter(item => \n          !this.foodCategories.includes(item.category) && // Exclude food categories\n          !this.readyMadeCategories.includes(item.category) && // Exclude ready-made categories\n          item.external_source !== 'inventory' && // Exclude inventory items from drinks\n          item.name.toLowerCase().includes(query)\n        );\n      } else if (this.currentCategory === 'All Food') {\n        // For \"All Food\", exclude all inventory items\n        this.filteredItems = this.apiItems.filter(item => \n          this.foodCategories.includes(item.category) &&\n          item.external_source !== 'inventory' && // Exclude inventory items from food\n          item.name.toLowerCase().includes(query)\n        );\n      } else if (this.currentCategory === 'All Ready Made') {\n        // For \"All Ready Made\", ONLY show inventory items\n        this.filteredItems = this.apiItems.filter(item => \n          item.external_source === 'inventory' &&\n          item.name.toLowerCase().includes(query)\n        );\n        \n        console.log(`Showing ${this.filteredItems.length} inventory items in the Ready Made section`);\n      } else {\n        // For specific categories\n        const isReadyMadeCategory = this.readyMadeCategories.includes(this.currentCategory);\n        \n        if (isReadyMadeCategory) {\n          // For Ready Made categories, only show inventory items for that category\n          this.filteredItems = this.apiItems.filter(item => \n            item.category === this.currentCategory &&\n            item.external_source === 'inventory' &&\n            item.name.toLowerCase().includes(query)\n          );\n        } else {\n          // For other categories, exclude all inventory items\n          this.filteredItems = this.apiItems.filter(item => \n            item.category === this.currentCategory &&\n            item.external_source !== 'inventory' &&\n            item.name.toLowerCase().includes(query)\n          );\n        }\n      }\n      \n      // Log the filtered items for debugging\n      console.log(`Filtered ${this.filteredItems.length} items for category: ${this.currentCategory}`);\n    },\n\n   checkAndNavigate(item) {\n      const stock = this.itemStocks[item.id];\n      if (!stock || stock.quantity === 0) {\n        alert('Sorry, this item is Temporarily Unavailable.');\n        return;\n      }\n      this.showItemModal = true;\n      this.selectedItem = item;\n    },\n    handleLogout() {\n      localStorage.removeItem('loggedIn');\n      this.$router.push({ name: 'Login' });\n    },\n    handleOrderHistory() {\n      this.$router.push({ name: 'OrderHistory' });\n    },\n    handleProfile() {\n      this.$router.push({ name: 'UserProfileCafe' }); // Navigate to the Profile page\n    },\n    toggleSidebar() {\n      this.isSidebarOpen = !this.isSidebarOpen; // Toggle sidebar open/close\n      localStorage.setItem('sidebarOpen', this.isSidebarOpen.toString());\n    },\n    closeSidebar() {\n      this.isSidebarOpen = false;\n      localStorage.setItem('sidebarOpen', this.isSidebarOpen.toString());\n    },\n    getCategoryIcon(category) {\n      const foundCategory = this.categories.find(cat => cat.name === category);\n      return foundCategory ? foundCategory.icon : 'fas fa-utensils';\n    },\n    async loadCategories() {\n      try {\n        const response = await fetch('http://localhost:8000/api/categories');\n        const data = await response.json();\n        if (data.categories) {\n          console.log('Original categories from API:', data.categories);\n          \n          // Normalize category types\n          this.categories = data.categories.map(cat => {\n            // Normalize ready-made category types\n            if (cat.type && \n               (cat.type.toLowerCase() === 'ready made' || \n                cat.type.toLowerCase() === 'ready-made' ||\n                cat.type.toLowerCase() === 'readymade' ||\n                cat.type.toLowerCase() === 'ready_made')) {  // Added underscore format\n              return { ...cat, type: 'ready-made' };\n            }\n            // Normalize drink category types\n            else if (cat.type && \n                    (cat.type.toLowerCase() === 'drink' || \n                     cat.type.toLowerCase() === 'beverage')) {\n              return { ...cat, type: 'drinks' };\n            }\n            // Normalize food category types\n            else if (cat.type && cat.type.toLowerCase() === 'food') {\n              return { ...cat, type: 'food' };\n            }\n            return cat;\n          });\n          \n          console.log('Normalized categories:', this.categories);\n          console.log('Ready Made categories:', this.readyMadeCategories);\n          \n          // If current category doesn't exist anymore, reset to a valid one\n          const allCategoryNames = [...this.drinkCategories, ...this.foodCategories, ...this.readyMadeCategories];\n          if (!allCategoryNames.includes(this.currentCategory) && \n              this.currentCategory !== 'All Drinks' && \n              this.currentCategory !== 'All Food' &&\n              this.currentCategory !== 'All Ready Made') {\n            this.currentCategory = this.drinkCategories.length > 0 ? 'All Drinks' : \n                                  (this.foodCategories.length > 0 ? 'All Food' : \n                                  (this.readyMadeCategories.length > 0 ? 'All Ready Made' : 'All'));\n            localStorage.setItem('lastViewedCategory', this.currentCategory);\n          }\n        }\n      } catch (error) {\n        console.error('Error loading categories:', error);\n      }\n    },\n    handleCategoriesUpdated() {\n      this.loadCategories();\n      this.fetchItems();\n    },\n    goToCart() {\n      // Navigate to confirm order page to view cart\n      this.$router.push({ name: \"ConfirmOrder\" });\n    },\n    closeItemModal() {\n      this.showItemModal = false;\n      this.selectedItem = null;\n      this.modalQuantity = 1; // Reset quantity when closing modal\n    },\n    async addToCart() {\n      if (!this.selectedItem) return;\n      \n      const stock = this.itemStocks[this.selectedItem.id];\n      if (!stock || stock.quantity < this.modalQuantity) {\n        alert('Sorry, not enough stock available.');\n        return;\n      }\n      \n      const imagePath = this.getImagePath(this.selectedItem.image);\n      const userCartKey = `cart_${this.userName}`;\n      let cart = JSON.parse(localStorage.getItem(userCartKey)) || [];\n      \n      const existingItemIndex = cart.findIndex(item => item.name === this.selectedItem.name);\n      \n      if (existingItemIndex !== -1) {\n        const newQuantity = cart[existingItemIndex].quantity + this.modalQuantity;\n        if (newQuantity > stock.quantity) {\n          alert('Sorry, not enough stock available for the requested quantity.');\n          return;\n        }\n        cart[existingItemIndex].quantity = newQuantity;\n      } else {\n        cart.push({\n          id: this.selectedItem.id,\n          name: this.selectedItem.name,\n          price: this.selectedItem.price,\n          image: imagePath,\n          quantity: this.modalQuantity\n        });\n      }\n      \n      localStorage.setItem(userCartKey, JSON.stringify(cart));\n      this.updateCartCount();\n      \n      // Save current category before closing modal\n      localStorage.setItem('lastViewedCategory', this.currentCategory);\n      \n      this.closeItemModal();\n    },\n    orderNow() {\n      if (!this.selectedItem) return;\n      \n      const imagePath = this.getImagePath(this.selectedItem.image);\n      const userCartKey = `cart_${this.userName}`;\n      let cart = JSON.parse(localStorage.getItem(userCartKey)) || [];\n      \n      const existingItemIndex = cart.findIndex(item => item.name === this.selectedItem.name);\n      \n      if (existingItemIndex !== -1) {\n        cart[existingItemIndex].quantity += this.modalQuantity;\n      } else {\n        cart.push({\n          name: this.selectedItem.name,\n          price: this.selectedItem.price,\n          image: imagePath,\n          quantity: this.modalQuantity\n        });\n      }\n      \n      // Save current category before navigating\n      localStorage.setItem('lastViewedCategory', this.currentCategory);\n      \n      localStorage.setItem(userCartKey, JSON.stringify(cart));\n      this.updateCartCount();\n      \n      this.$router.push({\n        name: \"ConfirmOrder\"\n      });\n    },\n    updateCartCount() {\n      const userCartKey = `cart_${this.userName}`;\n      const cart = JSON.parse(localStorage.getItem(userCartKey)) || [];\n      // Count unique items instead of total quantities\n      this.cartItemCount = cart.length;\n    },\n    decreaseModalQuantity() {\n      if (this.modalQuantity > 1) {\n        this.modalQuantity -= 1;\n      }\n    },\n    increaseModalQuantity() {\n      const stock = this.itemStocks[this.selectedItem?.id];\n      if (stock && this.modalQuantity < stock.quantity) {\n        this.modalQuantity += 1;\n      } else {\n        alert('Maximum available stock reached.');\n      }\n    },\n    initWebSocket() {\n      const wsUrl = `ws://${window.location.hostname}:8000/ws/orders`;\n      \n      // Close existing connection if any\n      if (this.ws) {\n        this.ws.close();\n      }\n      \n      this.ws = new WebSocket(wsUrl);\n      \n      this.ws.onopen = () => {\n        console.log('WebSocket connected');\n        this.wsConnected = true;\n        // Initial fetch of data when connection is established\n        this.fetchItems();\n        this.loadCategories();\n      };\n      \n      this.ws.onmessage = async (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          console.log('WebSocket message received:', data);\n          \n          if (data.type === 'stock_update') {\n            console.log('Stock update received:', data);\n            \n            // STEP 1: Immediately update the UI with new stock values\n            // Update the itemStocks object with the new stock data\n            this.itemStocks[data.item_id] = {\n              quantity: data.new_quantity,\n              min_stock_level: data.min_stock_level\n            };\n            \n            // If the item is currently selected in the modal, update its stock info immediately\n            if (this.selectedItem && this.selectedItem.id === data.item_id) {\n              this.selectedItem = {\n                ...this.selectedItem,\n                stock: data.new_quantity\n              };\n              \n              // If the item is out of stock, close the modal\n              if (data.new_quantity === 0) {\n                this.closeItemModal();\n              }\n            }\n            \n            // Update the filtered items in the display immediately\n            this.filteredItems = this.filteredItems.map(item => {\n              if (item.id === data.item_id) {\n                return {\n                  ...item,\n                  stock: data.new_quantity\n                };\n              }\n              return item;\n            });\n            \n            // STEP 2: Optional refresh of data in the background\n            // This can be done asynchronously and won't block the UI updates\n            setTimeout(async () => {\n              try {\n                await this.fetchItems();\n                this.filterItems();\n              } catch (error) {\n                console.error('Error refreshing items after stock update:', error);\n              }\n            }, 1000); // Delay refresh for 1 second to ensure UI is responsive first\n          } else if (data.type === 'menu_update') {\n            console.log('Menu update received, refreshing items and categories');\n            // First refresh categories to ensure any new/updated categories are loaded\n            await this.loadCategories();\n            // Then refresh items\n            await this.fetchItems();\n            // Finally, apply the current category filter\n            this.filterItems();\n            \n            // Show notification if items were added or updated\n            if (data.message && data.message.includes('Menu updated')) {\n              console.log('Menu update notification:', data.message);\n              // Optional: add a visual notification here\n            }\n          } else if (data.type === 'category_update') {\n            console.log('Category update received:', data);\n            // Refresh categories and items when categories change\n            await this.loadCategories();\n            await this.fetchItems();\n            this.filterItems();\n            \n            // If the current category was renamed, update the selection\n            if (data.action === 'update' && data.category.old_name === this.currentCategory) {\n              this.currentCategory = data.category.name;\n              localStorage.setItem('lastViewedCategory', this.currentCategory);\n            }\n            \n            // If the current category was deleted, reset to default\n            if (data.action === 'delete' && data.category_name === this.currentCategory) {\n              this.currentCategory = this.categories.length > 0 ? \n                (this.drinkCategories.length > 0 ? 'All Drinks' : \n                 (this.foodCategories.length > 0 ? this.foodCategories[0] : 'All')) : 'All';\n              localStorage.setItem('lastViewedCategory', this.currentCategory);\n            }\n          }\n        } catch (error) {\n          console.error('Error processing WebSocket message:', error);\n        }\n      };\n      \n      this.ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        this.wsConnected = false;\n        // Try to reconnect after 5 seconds\n        setTimeout(() => {\n          this.initWebSocket();\n        }, 5000);\n      };\n      \n      this.ws.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        this.wsConnected = false;\n        // Try to reconnect after error\n        setTimeout(() => {\n          if (!this.wsConnected) {\n            this.initWebSocket();\n          }\n        }, 5000);\n      };\n    },\n    async syncInventoryProducts() {\n      if (this.isSyncing) return;\n      \n      this.isSyncing = true;\n      try {\n        const response = await fetch('http://localhost:8000/api/sync-inventory-products');\n        const result = await response.json();\n        \n        if (result.success) {\n          console.log(`Successfully synchronized products: ${result.message}`);\n          // Commented out the alert to avoid showing the notification\n          // alert(`Successfully synchronized products from inventory system: ${result.message}`);\n        } else {\n          console.log(`Sync info: ${result.message}`);\n          // Commented out the alert to avoid showing the notification \n          // alert(`Sync info: ${result.message}`);\n        }\n        \n        // Refresh the items list\n        await this.fetchItems();\n        this.filterItems();\n      } catch (error) {\n        console.error('Error syncing inventory products:', error);\n        // Only show alert for errors\n        alert('Failed to sync products from inventory system');\n      } finally {\n        this.isSyncing = false;\n      }\n    },\n    isInventoryItem(item) {\n      return item.external_source === 'inventory';\n    },\n    // Add this method to handle image loading errors\n    handleImageError(event) {\n      // If image fails to load, use the default image\n      event.target.src = require('@/assets/default.png');\n      console.log('Profile image failed to load, using default image');\n    },\n    isInventoryItemStyled(item) {\n      // Only apply special styling to inventory items when not in the Ready Made sections\n      return this.isInventoryItem(item) && \n             this.currentCategory !== 'All Ready Made' && \n             !this.currentCategory.includes('Ready Made');\n    },\n    getAvatarUrl(avatar) {\n      return avatar ? `http://127.0.0.1:8000${avatar}` : `https://ui-avatars.com/api/?name=${encodeURIComponent(this.userName)}&background=E54F70&color=fff&size=128`;\n    },\n  },\n  watch: {\n    isDarkMode: {\n      handler(newValue) {\n        if (newValue) {\n          document.body.classList.add('dark-mode');\n        } else {\n          document.body.classList.remove('dark-mode');\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    drinkCategories() {\n      return this.categories\n        .filter(cat => cat.type === 'drinks')\n        .map(cat => cat.name);\n    },\n    \n    foodCategories() {\n      return this.categories\n        .filter(cat => cat.type === 'food')\n        .map(cat => cat.name);\n    },\n    readyMadeCategories() {\n      return this.categories\n        .filter(cat => {\n          // Simplify to only include the exact Ready Made category\n          // This ensures we don't mistakenly include other categories\n          return cat.name === 'Ready Made' || \n                 (cat.type && (\n                    cat.type === 'ready_made' || \n                    cat.type === 'ready-made' || \n                    cat.type === 'Ready Made'\n                 ));\n        })\n        .map(cat => cat.name);\n    }\n  },\n};\n</script>\n\n\n<style scoped>\n/* Add loading indicator styles */\n.loading-indicator {\n  text-align: center;\n  padding: 20px;\n  font-size: 18px;\n  color: #d12f7a;\n}\n\n.no-items {\n  text-align: center;\n  padding: 20px;\n  font-size: 18px;\n  color: #666;\n}\n\n.utility-divider {\n  border: none;\n  height: 1px;\n background-color: rgba(0, 0, 0, 0.1);\n  margin: 10px 0;\n}\n\n.user-profile-section {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.profile-image {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 2px solid rgba(255, 255, 255, 0.2);\n}\n\n.profile-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.user-name {\n  font-size: 1.1rem;\n  font-weight: 500;\n  color: #222;\n}\n\n.theme-toggle {\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  background: transparent;\n  border: none;\n  font-size: 1.2rem;\n  cursor: pointer;\n  padding: 8px;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n}\n\n.theme-toggle:hover {\n background-color: rgba(0, 0, 0, 0.05);\n}\n\n.theme-toggle .light-icon {\n  color: #333;\n}\n\n.theme-toggle .dark-icon {\n  color: #fff;\n}\n\n.light-mode \n\n.theme-toggle {\n  color: #333;\n}\n\n.light-mode \n.user-name {\n  color: #333;\n}\n.dark-mode .user-name {\n  color: #fff;\n}\n.dark-mode .theme-toggle {\n  color: #fff;\n}\n.dark-mode .utility-divider {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.dark-mode .item {\n  background-color: #555555; /* Light grey background for dark mode */\n  color: #ffffff; /* Light text color */\n  box-shadow: 0px 4px 6px rgba(255, 255, 255, 0.1); /* Lighter box shadow */\n}\n\n.dark-mode .item span {\n  color: #ffffff; /* Light text for item span */\n}\n\n.dark-mode .item-price {\n  background-color: #6e6e6e; /* Lighter background for price */\n  color: #ffffff; /* Light text color for price */\n}\n\n.dark-mode .item-price:hover {\n  background-color: #888888; /* Darker price background on hover */\n  cursor: pointer;\n}\n\n\n.dark-mode-button, \n.notification-button {\n  position: relative;\n  background-color: rgb(48, 41, 44);\n  color: white;\n  padding: 8px 12px;\n  font-size: 14px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s ease-in-out;\n}\n\n.notification-badge {\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background-color: red;\n  color: white;\n  border-radius: 50%; /* This ensures it's fully circular */\n  font-size: 12px;\n  width: 20px; /* Set a fixed width */\n  height: 20px; /* Set a fixed height to ensure it's circular */\n  display: flex;\n  justify-content: center; /* Centers the content horizontally */\n  align-items: center; /* Centers the content vertically */\n}\n\n.dark-mode-button i, \n.notification-button i {\n  font-size: 18px; /* Adjust icon size */\n}\n\n.top-bar-buttons {\n  display: flex;\n  gap: 10px; /* Space between buttons */\n}\n\n.notification-button {\n  background-color: rgb(48, 41, 44); /* Same background as dark mode */\n  color: white;\n  padding: 8px 12px;\n  font-size: 14px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s ease-in-out;\n}\n\n.notification-button:hover {\n  background-color: #b82d67; /* Same hover effect as dark mode button */\n}\n\n.notification-button i {\n  font-size: 18px; /* Adjust the icon size */\n}\n\n.dark-mode {\n  background-color: #121212;\n  color: #ffffff;\n}\n\n/* Buttons and Sidebar in Dark Mode */\n.dark-mode .sidebar,\n.dark-mode .dashboard,\n.dark-mode .top-bar,\n.dark-mode .content {\n  background-color: #1e1e1e;\n  color: #ffffff;\n}\n\n\n/* Dark Mode Button Styling */\n.dark-mode-button {\n  background-color: rgb(48, 41, 44);\n  color: white;\n  padding: 8px 12px;\n  font-size: 14px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s ease-in-out;\n}\n\n.dark-mode .sidebar,\n.dark-mode .sidebar-category h3,\n.dark-mode .sidebar-category ul li {\n  color: #ffffff !important;\n}\n\n/* Dark Mode for Live Time */\n.dark-mode .live-time {\n  color: #ffffff !important;\n}\n\n\n   .item-details {\n    display: flex;\n    flex-direction: column; /* Stack the name and price vertically */\n    align-items: center;\n    margin-top: 10px;\n  }\n\n  /* Style the price to highlight it */\n  .item-price {\n    font-size: 18px;\n    font-weight: bold;\n    color: #d12f7a; \n    background-color: #f8e1e6; \n    padding: 5px 10px;\n    border-radius: 5px;\n    margin-top: 5px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n\n  /* Glowing effect on hover */\n  .item-price:hover {\n    background-color: #f8c6d0; \n    cursor: pointer;\n  }\n\n  /* Glowing Button Styles */\n  .profile-button,\n  .order-history-button,\n  .logout-button {\n    padding: 15px 40px;\n    border: none;\n    outline: none;\n    color: #FFF;\n    cursor: pointer;\n    position: relative;\n    z-index: 0;\n    border-radius: 12px;\n    background-color: transparent;\n    border: 2px solid #d12f7a; /* Adjust border color */\n    font-size: 14px;\n   \n  }\n\n  /* Glowing effect */\n  .profile-button::after,\n  .order-history-button::after,\n  .logout-button::after {\n    content: \"\";\n    z-index: -1;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: #333;\n    left: 0;\n    top: 0;\n    border-radius: 10px;\n  }\n\n  /* Animation for glowing */\n  .profile-button::before,\n  .order-history-button::before,\n  .logout-button::before {\n    content: \"\";\n    background: linear-gradient(\n      45deg,\n      #FF0000, #FF7300, #FFFB00, #48FF00,\n      #00FFD5, #002BFF, #FF00C8, #FF0000\n    );\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    background-size: 600%;\n    z-index: -1;\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n    filter: blur(8px);\n    animation: glowing 20s linear infinite;\n    transition: opacity .3s ease-in-out;\n    border-radius: 10px;\n    opacity: 0;\n  }\n\n  /* Hover effect for glowing */\n  .profile-button:hover::before,\n  .order-history-button:hover::before,\n  .logout-button:hover::before {\n    opacity: 1;\n  }\n\n  /* Active button state */\n  .profile-button:active:after,\n  .order-history-button:active:after,\n  .logout-button:active:after {\n    background: transparent;\n  }\n\n  .profile-button:active,\n  .order-history-button:active,\n  .logout-button:active {\n    color: #000;\n    font-weight: bold;\n    background-color: #d12f7a; /* Active background color */\n    border-color: #d12f7a; /* Border color */\n  }\n\n  /* Glow Animation */\n  @keyframes glowing {\n    0% {background-position: 0 0;}\n    50% {background-position: 400% 0;}\n    100% {background-position: 0 0;}\n  }\n\n/* Existing styles (unchanged) */\n.profile-button {\n  background-color: rgb(100, 14, 51);\n  color: white;\n  padding: 10px;\n  font-size: 18px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background 0.3s ease-in-out;\n  width: 40px; /* Adjust width and height for round button */\n  height: 40px; /* Adjust width and height for round button */\n}\n\n.profile-button i {\n  font-size: 24px; /* Adjust icon size */\n}\n\n.profile-button:hover {\n  background-color: #b82d67;\n\n}\n\n.dashboard {\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n  background-color: #ffffff;\n  width: 100%;\n  overflow-x: hidden;\n  position: relative;\n}\n\nhtml, body {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  background-color: #ffffff;\n}\n\n/* Sidebar */\n.sidebar {\n  position: fixed;\n  top: 0;\n  left: -280px;\n  height: 100vh;\n  width: 280px;\n  background-color: white;\n  transition: all 0.3s ease;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  padding: 20px 0 20px 0; /* Add bottom padding */\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.sidebar.light-mode {\n  background-color: white;\n}\n\n.sidebar.dark-mode {\n  background-color: #333;\n  color: #fff;\n}\n\n.sidebar.dark-mode .utility-button,\n.sidebar.dark-mode .menu-item,\n.sidebar.dark-mode .profile-section,\n.sidebar.dark-mode h3 {\n  color: #fff;\n}\n\n.sidebar.dark-mode .utility-button:hover,\n.sidebar.dark-mode .menu-item:hover {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.sidebar.dark-mode .profile-section,\n.sidebar.dark-mode .utility-section,\n.sidebar.dark-mode .logout {\n  border-color: rgba(255, 255, 255, 0.1);\n}\n\n.sidebar.open {\n  left: 0;\n}\n\n.close-sidebar {\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  background: none;\n  border: none;\n  font-size: 18px;\n  cursor: pointer;\n  color: inherit;\n  padding: 5px;\n}\n\n.profile-section {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 15px 20px;\n  color: inherit;\n  font-size: 15px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  background: none;\n  border: none;\n  width: 100%;\n  cursor: pointer;\n  text-align: left;\n}\n\n.profile-section:hover {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n\n.utility-section {\n  padding: 10px 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.utility-button {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 12px 20px;\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: inherit;\n  font-size: 15px;\n  text-decoration: none;\n  transition: background-color 0.2s;\n}\n\n.utility-button:hover {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n\n.notification-link {\n  position: relative;\n  text-decoration: none;\n  color: inherit;\n}\n\n.notification-icon {\n  position: relative;\n  display: inline-block;\n  width: 20px;\n}\n\n.notification-badge {\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  background-color: red;\n  color: white;\n  border-radius: 50%; /* This ensures it's fully circular */\n  font-size: 11px;\n  min-width: 15px;\n  height: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.menu-section {\n  flex: 1;\n  padding: 15px 0 0 0;\n  overflow-y: auto;\n  margin-bottom: 0;\n}\n\n.menu-section h3 {\n  padding: 0 20px;\n  margin: 10px 0 5px;\n  font-size: 16px;\n  color: inherit;\n  font-weight: 500;\n}\n\n.menu-items {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n}\n\n.menu-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 8px 20px;\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: inherit;\n  font-size: 15px;\n  text-align: left;\n  transition: background-color 0.2s;\n}\n\n.menu-item:hover {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n\n.menu-item i {\n  width: 20px;\n  text-align: center;\n  font-size: 14px;\n}\n\n.logout-container {\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 0;\n  background-color: white;\n  margin-bottom: 20px; /* Add space after logout button */\n}\n\n.dark-mode .logout-container {\n  background-color: #333;\n  border-top-color: rgba(255, 255, 255, 0.1);\n}\n\n.logout {\n  color: inherit;\n  padding: 10px 20px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n/* Mobile Responsive */\n@media (max-width: 768px) {\n  .content {\n    margin-left: 0;\n    padding: 15px;\n  }\n  \n  .menu-button {\n    display: block;\n  }\n}\n\n/* Desktop Responsive */\n@media (min-width: 769px) {\n  .content {\n    margin-left: 0; /* Remove default margin to match mobile behavior */\n  }\n  \n  .menu-button {\n    display: block; /* Show menu button on desktop */\n    background: rgb(255, 255, 255);\n    color: black;\n    padding: 10px 15px;\n    font-size: 18px;\n    border-radius: 15px;\n    transition: background 0.3s ease-in-out;\n  }\n\n  /* When sidebar is open */\n  .sidebar.open + .content {\n    margin-left: 270px;\n  }\n}\n\n/* Update menu button base styles */\n.menu-button {\n  position: fixed;\n  top: 15px;\n  left: 15px;\n  z-index: 300;\n  background: white;\n  color: #E54F70;\n  padding: 10px 15px;\n  font-size: 18px;\n  border: none;\n  border-radius: 15px;\n  cursor: pointer;\n  transition: background 0.3s ease-in-out;\n  display: block; /* Always show the menu button */\n}\n\n.menu-icon-container {\n  position: relative;\n  display: inline-block;\n}\n\n.menu-notification-badge {\n  position: absolute;\n  top: -8px;\n  right: -20px;\n  background-color: red;\n  color: white;\n  border-radius: 50%;\n  font-size: 12px;\n  min-width: 18px;\n  height: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n}\n\n/* Add overlay styles */\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 299;\n  display: none;\n}\n\n.overlay.show {\n  display: block;\n}\n\n/* Update content transition */\n.content {\n  transition: margin-left 0.3s ease;\n}\n\n/* Style the container for both logo and live time */\n.logo-time-container {\n  display: none;\n}\n\n.search-cart-container {\n  display: flex;\n  align-items: center;\n  width: 80%;\n  max-width: 400px;\n  position: relative;\n}\n\n.search-container { \n  display: flex;\n  justify-content: center; \n  padding: 10px;\n  border-radius: 15px;\n  width: 100%;\n  max-width: 300px;\n} \n\n.cart-icon-container {\n  position: absolute;\n  right: -40px;\n  cursor: pointer;\n  padding: 10px;\n  font-size: 24px;\n  color: #d12f7a;\n  transition: color 0.3s ease;\n}\n\n@media (max-width: 768px) {\n  .search-cart-container {\n    width: 90%;\n    max-width: none;\n    position: relative;\n  }\n  \n  .search-container {\n    width: 100%;\n    max-width: none;\n  }\n  \n  .cart-icon-container {\n    right: -35px;\n    font-size: 20px;\n  }\n  \n  .search-container input {\n    width: 100%;\n    max-width: none;\n  }\n}\n\n.cart-badge {\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background-color: red;\n  color: white;\n  border-radius: 50%;\n  padding: 2px 6px;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.item-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 30px;\n  border-radius: 15px;\n  text-align: center;\n  width: 90%;\n  max-width: 400px;\n  position: relative;\n  border: 2px solid #E54F70;\n}\n\n/* Update close button styles */\n.modal-content .close {\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  font-size: 32px;\n  color: #333;\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n  background: none;\n  border: none;\n  padding: 0;\n  line-height: 1;\n}\n\n.modal-content .close:hover {\n  color: #d12f7a;\n  transform: scale(1.1);\n}\n\n/* Dark mode styles for close button */\n.dark-mode .modal-content .close {\n  color: #fff;\n}\n\n.dark-mode .modal-content .close:hover {\n  color: #f8c6d0;\n}\n\n@media (max-width: 768px) {\n  .modal-content .close {\n    font-size: 28px;\n    width: 35px;\n    height: 35px;\n  }\n}\n\n.modal-item-details {\n  margin-bottom: 20px;\n}\n\n.modal-item-details img {\n  width: 150px;\n  height: 150px;\n  object-fit: contain;\n  margin-bottom: 15px;\n}\n\n.modal-item-details h3 {\n  color: #333;\n  margin: 10px 0;\n}\n\n.modal-item-details .price {\n  color: #d12f7a;\n  font-size: 20px;\n  font-weight: bold;\n}\n\n.modal-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n}\n\n.add-cart-btn, .order-now-btn {\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: all 0.3s ease;\n}\n\n.add-cart-btn {\n  background-color: #333;\n  color: white;\n}\n\n.order-now-btn {\n  background-color: #d12f7a;\n  color: white;\n}\n\n.add-cart-btn:hover {\n  background-color: #444;\n}\n\n.order-now-btn:hover {\n  background-color: #b82d67;\n}\n\n/* Dark mode styles */\n.dark-mode .modal-content {\n  background-color: #333;\n  color: white;\n}\n\n.dark-mode .modal-item-details h3 {\n  color: white;\n}\n\n.dark-mode .cart-icon-container {\n  color: #f8c6d0;\n}\n\n.dark-mode .cart-icon-container:hover {\n  color: #f8a1b2;\n}\n\n@media (max-width: 768px) {\n  .search-cart-container {\n    max-width: 300px;\n  }\n  \n  .cart-icon-container {\n    font-size: 20px;\n  }\n  \n  .modal-content {\n    width: 85%;\n    padding: 20px;\n  }\n  \n  .modal-item-details img {\n    width: 120px;\n    height: 120px;\n  }\n}\n\n/* Add this to your existing styles */\n.added-to-cart-notification {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 20px;\n  border-radius: 5px;\n  z-index: 2000;\n  animation: slideIn 0.3s ease-out, fadeOut 0.3s ease-out 0.7s;\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n/* Dark mode support */\n.dark-mode .added-to-cart-notification {\n  background-color: #45a049;\n}\n\n/* Modal Quantity Controls */\n.modal-quantity-controls {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  margin: 20px 0;\n}\n\n.quantity-btn {\n  width: 35px;\n  height: 35px;\n  border: none;\n  border-radius: 50%;\n  background-color: #d12f7a;\n  color: white;\n  font-size: 20px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n}\n\n.quantity-btn:hover {\n  background-color: #b82d67;\n  transform: scale(1.1);\n}\n\n.quantity-display {\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  min-width: 40px;\n  text-align: center;\n}\n\n.total-price {\n  font-size: 20px;\n  font-weight: bold;\n  color: #d12f7a;\n  margin-top: 10px;\n}\n\n/* Dark mode styles for quantity controls */\n.dark-mode .quantity-display {\n  color: #fff;\n}\n\n.dark-mode .quantity-btn {\n  background-color: #444;\n}\n\n.dark-mode .quantity-btn:hover {\n  background-color: #555;\n}\n\n/* Remove all out-of-stock related styles */\n.item.out-of-stock {\n  opacity: 0.9;\n  position: relative;\n}\n\n.item.out-of-stock img {\n  filter: grayscale(0.7);\n}\n\n/* Top Bar */\n.top-bar {\n  display: flex;\n  align-items: center;\n  background-image: linear-gradient(to right, #E54F70, #ed9598);\n  padding: 0 15px;\n  height: 60px;\n  width: 100%;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.centered-content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n  gap: 20px;\n}\n\n.top-bar .menu-button {\n  position: static;\n  background: transparent;\n  box-shadow: none;\n  font-size: 24px;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  z-index: 101;\n  color: white;\n}\n\n.logo-container {\n  display: flex;\n  align-items: center;\n  flex-shrink: 0;\n}\n\n.logo-container img {\n  width: 30px;\n  height: 30px;\n  object-fit: contain;\n}\n\n.cafe-title {\n  color: white;\n  font-weight: bold;\n  margin-left: 10px;\n  font-size: 18px;\n  white-space: nowrap;\n}\n\n.search-container {\n  flex-grow: 0;\n  width: 250px;\n}\n\n.search-container input {\n  width: 100%;\n  padding: 8px 15px;\n  border-radius: 20px;\n  border: 1px solid #ccc;\n  font-size: 14px;\n  background-color: white;\n}\n\n.time-cart-container {\n  display: flex;\n  align-items: center;\n  flex-shrink: 0;\n}\n\n.live-time {\n  font-weight: 500;\n  font-size: 14px;\n  color: white;\n  white-space: nowrap;\n}\n\n.cart-icon-container {\n  cursor: pointer;\n  font-size: 22px;\n  color: #d12f7a;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  background-color: #f8e1e6;\n  border-radius: 50%;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  transition: all 0.3s ease;\n}\n\n.cart-icon-container:hover {\n  transform: scale(1.1);\n  background-color: #f8d1d1;\n}\n\n.cart-badge {\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background-color: red;\n  color: white;\n  border-radius: 50%;\n  font-size: 10px;\n  min-width: 18px;\n  height: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n}\n\n/* Dark mode styles for top bar */\n.dark-mode .top-bar {\n  background-image: linear-gradient(to right, #333, #444);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n}\n\n.dark-mode .cafe-title {\n  color: white;\n}\n\n.dark-mode .live-time {\n  color: white;\n}\n\n.dark-mode .search-container input {\n  background-color: #444;\n  color: white;\n  border-color: #555;\n}\n\n.dark-mode .top-bar .menu-button {\n  color: white;\n}\n\n/* Responsive adjustments for top bar */\n@media (max-width: 768px) {\n  .top-bar {\n    padding: 0 10px;\n  }\n  \n  .centered-content {\n    gap: 10px;\n  }\n  \n  .search-container {\n    width: 180px;\n  }\n  \n  .logo-container img {\n    width: 25px;\n    height: 25px;\n  }\n  \n  .cafe-title {\n    font-size: 16px;\n    margin-left: 5px;\n  }\n}\n\n@media (max-width: 480px) {\n  .top-bar {\n    padding: 0 5px;\n  }\n  \n  .centered-content {\n    gap: 5px;\n  }\n  \n  .search-container {\n    width: 120px;\n  }\n  \n  .cafe-title {\n    font-size: 14px;\n  }\n  \n  .cart-icon-container {\n    width: 36px;\n    height: 36px;\n    font-size: 20px;\n  }\n}\n\n/* Dashboard Title */\n.dashboard-title {\n   font-size: 40px;\n  font-weight: bold;\n   color: #d12f7a;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  text-align: center;\n  font-style: italic; \n  font-family: \"Merriweather\", serif; \n  letter-spacing: 1px; \n \n}\n\n .dashboard-title:hover {\n    color: #fff; \n    text-shadow: 0 0 10px rgba(209, 47, 122, 1), 0 0 20px rgba(209, 47, 122, 0.7); \n\n }\n \n .logo-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* Live Time container */\n.live-time-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  font-weight: bold;\n  font-size: 20px;\n}\n\n/* Style the search bar */\n.search-container input {\n  border-radius: 20px;\n  border: 1px solid #ccc;\n  width: 100%;\n  max-width: 300px;\n}\n\n.order-history-button,\n  .logout-button {\n    font-size: 12px;\n    padding: 6px 10px;\n  }\n/* Categories Section */\n.categories {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.category {\n  width: 48%;\n}\n\n.category h2 {\n  font-size: 24px;\n  font-weight: bold;\n  color: #d12f7a;\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\n\n/* Items Section */\n.items {\n  display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n   gap: 20px;\n  padding: 20px;\n  justify-content: center;\n  align-items: center;\n}\n@media (min-width: 1024px) {\n  .items {\n    grid-template-columns: repeat(4, 1fr);\n  }\n}\n\n/* Adjust for smaller screens */\n@media (max-width: 1023px) {\n  .items {\n    grid-template-columns: repeat(3, 1fr);\n  }\n}\n\n@media (max-width: 768px) {\n  .items {\n     display: flex;\n    grid-template-columns: repeat(2, 1fr);\n       flex-direction: column;\n    align-items: center;\n  }\n}\n\n@media (max-width: 480px) {\n  .items {\n    grid-template-columns: 1fr;\n  }\n}\n\n/* Item styling */\n.item {\n  text-align: center;\n  background-color: white;\n  border-radius: 15px;\n  padding: 15px;\n  cursor: pointer;\n  transition: transform 0.3s ease, opacity 0.3s ease;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  max-width: 200px;\n  margin: 0 auto;\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n  border: 1px solid #E54F70;\n}\n\n.item img {\n  width: 100px;\n  height: 100px;\n  object-fit: contain;\n}\n\n.item:hover img {\n  transform: scale(1.05);\n}\n\n.item span {\n  font-weight: bold;\n  color: #333;\n  font-size: 16px;\n  text-align: center;\n  display: block;\n  line-height: 1.3;\n  margin-top: 8px;\n}\n\n/* Responsive Text Adjustments */\n@media (max-width: 768px) {\n  .dashboard-title {\n    font-size: 35px;\n  }\n\n}\n .item-details {\n    display: flex;\n    justify-content: space-between;\n   flex-direction: column;\n  align-items: center;\n  margin-top: 10px;\n  }\n\n  .item-price {\n    font-size: 18px;\n    font-weight: bold;\n    color: #d12f7a; \n    background-color: #f8e1e6; \n    padding: 5px 10px;\n    border-radius: 5px;\n    margin-top: 5px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n\n  .item-price:hover {\n    background-color: #f8c6d0; \n    cursor: pointer;\n  }\n\n  .category h2 {\n    font-size: 20px;\n  }\n\n  .item span {\n    font-size: 14px;\n  }\n\n \n\n@media (max-width: 480px) {\n  .dashboard-title {\n    font-size: 30px;\n  }\n\n  .category h2 {\n    font-size: 18px;\n  }\n\n\n  .order-history-button,\n  .logout-button {\n     font-size: 10px;\n    padding: 5px 8px;\n  }\n}\n\n.category-header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.category-header h2 {\n  font-size: 24px;\n  color:rgb(0, 0, 0);\n  text-align: center;\n  margin: 0;\n  padding: 0;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n}\n\n/* Dark mode styles for category header */\n.dark-mode .category-header h2 {\n  color: #f8c6d0;\n}\n\n/* Remove refresh button styles that are no longer needed */\n.refresh-button,\n.refresh-button:hover,\n.refresh-button:disabled,\n.fa-spin,\n@keyframes fa-spin {\n  /* These styles will be removed */\n}\n\n.search-cart-container {\n  display: flex;\n  align-items: center;\n  width: 80%;\n  max-width: 400px;\n  position: relative;\n}\n\n.search-container { \n  display: flex;\n  justify-content: center; \n  padding: 10px;\n  border-radius: 15px;\n  width: 100%;\n  max-width: 300px;\n} \n\n.cart-icon-container {\n  position: absolute;\n  right: -40px;\n  cursor: pointer;\n  padding: 10px;\n  font-size: 24px;\n  color: #d12f7a;\n  transition: color 0.3s ease;\n}\n\n@media (max-width: 768px) {\n  .search-cart-container {\n    width: 90%;\n    max-width: none;\n    position: relative;\n  }\n  \n  .search-container {\n    width: 100%;\n    max-width: none;\n  }\n  \n  .cart-icon-container {\n    right: -35px;\n    font-size: 20px;\n  }\n  \n  .search-container input {\n    width: 100%;\n    max-width: none;\n  }\n}\n\n.cart-badge {\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background-color: red;\n  color: white;\n  border-radius: 50%;\n  padding: 2px 6px;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.item-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 30px;\n  border-radius: 15px;\n  text-align: center;\n  width: 90%;\n  max-width: 400px;\n  position: relative;\n  border: 2px solid #E54F70;\n}\n\n/* Update close button styles */\n.modal-content .close {\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  font-size: 32px;\n  color: #333;\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n  background: none;\n  border: none;\n  padding: 0;\n  line-height: 1;\n}\n\n.modal-content .close:hover {\n  color: #d12f7a;\n  transform: scale(1.1);\n}\n\n/* Dark mode styles for close button */\n.dark-mode .modal-content .close {\n  color: #fff;\n}\n\n.dark-mode .modal-content .close:hover {\n  color: #f8c6d0;\n}\n\n@media (max-width: 768px) {\n  .modal-content .close {\n    font-size: 28px;\n    width: 35px;\n    height: 35px;\n  }\n}\n\n.modal-item-details {\n  margin-bottom: 20px;\n}\n\n.modal-item-details img {\n  width: 150px;\n  height: 150px;\n  object-fit: contain;\n  margin-bottom: 15px;\n}\n\n.modal-item-details h3 {\n  color: #333;\n  margin: 10px 0;\n}\n\n.modal-item-details .price {\n  color: #d12f7a;\n  font-size: 20px;\n  font-weight: bold;\n}\n\n.modal-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n}\n\n.add-cart-btn, .order-now-btn {\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: all 0.3s ease;\n}\n\n.add-cart-btn {\n  background-color: #333;\n  color: white;\n}\n\n.order-now-btn {\n  background-color: #d12f7a;\n  color: white;\n}\n\n.add-cart-btn:hover {\n  background-color: #444;\n}\n\n.order-now-btn:hover {\n  background-color: #b82d67;\n}\n\n/* Dark mode styles */\n.dark-mode .modal-content {\n  background-color: #333;\n  color: white;\n}\n\n.dark-mode .modal-item-details h3 {\n  color: white;\n}\n\n.dark-mode .cart-icon-container {\n  color: #f8c6d0;\n}\n\n.dark-mode .cart-icon-container:hover {\n  color: #f8a1b2;\n}\n\n@media (max-width: 768px) {\n  .search-cart-container {\n    max-width: 300px;\n  }\n  \n  .cart-icon-container {\n    font-size: 20px;\n  }\n  \n  .modal-content {\n    width: 85%;\n    padding: 20px;\n  }\n  \n  .modal-item-details img {\n    width: 120px;\n    height: 120px;\n  }\n}\n\n/* Add this to your existing styles */\n.added-to-cart-notification {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 20px;\n  border-radius: 5px;\n  z-index: 2000;\n  animation: slideIn 0.3s ease-out, fadeOut 0.3s ease-out 0.7s;\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n/* Dark mode support */\n.dark-mode .added-to-cart-notification {\n  background-color: #45a049;\n}\n\n/* Modal Quantity Controls */\n.modal-quantity-controls {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  margin: 20px 0;\n}\n\n.quantity-btn {\n  width: 35px;\n  height: 35px;\n  border: none;\n  border-radius: 50%;\n  background-color: #d12f7a;\n  color: white;\n  font-size: 20px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n}\n\n.quantity-btn:hover {\n  background-color: #b82d67;\n  transform: scale(1.1);\n}\n\n.quantity-display {\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  min-width: 40px;\n  text-align: center;\n}\n\n.total-price {\n  font-size: 20px;\n  font-weight: bold;\n  color: #d12f7a;\n  margin-top: 10px;\n}\n\n/* Dark mode styles for quantity controls */\n.dark-mode .quantity-display {\n  color: #fff;\n}\n\n.dark-mode .quantity-btn {\n  background-color: #444;\n}\n\n.dark-mode .quantity-btn:hover {\n  background-color: #555;\n}\n\n/* Remove all out-of-stock related styles */\n.item.out-of-stock {\n  opacity: 0.9;\n  position: relative;\n}\n\n.item.out-of-stock img {\n  filter: grayscale(0.7);\n}\n\n/* Add floating cart styles */\n.floating-cart {\n  position: fixed;\n  bottom: 30px;\n  right: 30px;\n  width: 60px;\n  height: 60px;\n  background-color: #d12f7a;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);\n  z-index: 1000;\n  transition: all 0.3s ease;\n}\n\n.floating-cart:hover {\n  transform: scale(1.1);\n  background-color: #b82d67;\n}\n\n.floating-cart-badge {\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  background-color: red;\n  color: white;\n  border-radius: 50%;\n  font-size: 14px;\n  min-width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n}\n\n.dark-mode .floating-cart {\n  background-color: #444;\n}\n\n.dark-mode .floating-cart:hover {\n  background-color: #333;\n}\n\n@media (max-width: 768px) {\n  .floating-cart {\n    bottom: 20px;\n    right: 20px;\n    width: 55px;\n    height: 55px;\n  }\n}\n\n@media (max-width: 480px) {\n  .floating-cart {\n    bottom: 15px;\n    right: 15px;\n    width: 50px;\n    height: 50px;\n    font-size: 20px;\n  }\n  \n  .floating-cart-badge {\n    min-width: 20px;\n    height: 20px;\n    font-size: 12px;\n  }\n}\n\n/* Update time-cart-container to just show time */\n.time-cart-container {\n  display: flex;\n  align-items: center;\n  flex-shrink: 0;\n}\n\n.sync-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 0.8rem;\n  cursor: pointer;\n  margin-left: 10px;\n  transition: all 0.3s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.sync-button.prominent {\n  background-color: #007bff;\n  padding: 6px 12px;\n  font-size: 0.9rem;\n  font-weight: bold;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n}\n\n.sync-button:hover {\n  background-color: #45a049;\n  transform: scale(1.05);\n}\n\n.sync-button.prominent:hover {\n  background-color: #0069d9;\n  transform: scale(1.05);\n}\n\n.sync-button:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.sync-button i {\n  font-size: 12px;\n}\n\n/* Add to the style section */\n.inventory-badge {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: #4CAF50;\n  color: white;\n  border-radius: 15px;\n  padding: 5px 10px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  z-index: 2;\n  font-size: 12px;\n  font-weight: bold;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n}\n\n.inventory-badge i {\n  font-size: 14px;\n}\n\n.inventory-badge span {\n  color: white !important;\n  font-size: 12px !important;\n}\n\n.item-image-container {\n  position: relative;\n  width: 100%;\n  height: 150px;\n  overflow: hidden;\n  border-radius: 10px 10px 0 0;\n}\n\n.item-image-container img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.inventory-badge {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: #4CAF50;\n  color: white;\n  border-radius: 15px;\n  padding: 3px 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n  z-index: 2;\n  font-size: 12px;\n}\n\n.inventory-badge i {\n  font-size: 18px;\n}\n\n.inventory-item {\n  border: 2px solid #4CAF50;\n  box-shadow: 0 4px 8px rgba(76, 175, 80, 0.3);\n}\n\n/* Add CSS for the modal image container and inventory badge */\n.modal-image-container {\n  position: relative;\n  width: 100%;\n  max-height: 200px;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 15px;\n}\n\n.modal-image-container img {\n  max-height: 200px;\n  max-width: 100%;\n  object-fit: contain;\n}\n\n.inventory-badge-modal {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: #4CAF50;\n  color: white;\n  padding: 5px 10px;\n  border-radius: 15px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 12px;\n  font-weight: bold;\n}\n\n.dark-mode .item.inventory-item {\n  border: 2px solid #4CAF50;\n  box-shadow: 0 4px 8px rgba(76, 175, 80, 0.3);\n}\n\n.top-controls {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n/* Additional responsive adjustments */\n@media (max-width: 768px) {\n  .top-controls {\n    gap: 10px;\n  }\n}\n\n@media (max-width: 480px) {\n  .top-controls {\n    gap: 5px;\n  }\n  \n  .live-time {\n    font-size: 14px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}