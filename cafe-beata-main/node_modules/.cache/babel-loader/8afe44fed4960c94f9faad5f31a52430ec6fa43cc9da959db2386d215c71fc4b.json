{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      user: {\n        avatar: '',\n        // Removed hardcoded default avatar\n        username: '',\n        email: '',\n        course: '',\n        gender: ''\n      },\n      isEditing: false,\n      isDarkMode: localStorage.getItem('darkMode') === 'true' // Load Dark Mode preference\n    };\n  },\n  mounted() {\n    const userEmail = localStorage.getItem('userEmail');\n    if (userEmail) {\n      this.user.email = userEmail;\n      this.loadProfile(); // Load profile on mount\n    }\n\n    // Ensure dark mode is applied when page loads\n    if (localStorage.getItem('darkMode') === 'true') {\n      this.isDarkMode = true;\n      document.body.classList.add('dark-mode');\n    }\n  },\n  methods: {\n    // Toggle Dark Mode and save preference\n    toggleDarkMode() {\n      this.isDarkMode = !this.isDarkMode;\n      localStorage.setItem('darkMode', this.isDarkMode);\n\n      // Apply or remove dark mode class\n      if (this.isDarkMode) {\n        document.body.classList.add('dark-mode');\n      } else {\n        document.body.classList.remove('dark-mode');\n      }\n    },\n    getAvatarUrl(avatar) {\n      return avatar ? `http://127.0.0.1:8000${avatar}` : ''; // Removed default.png reference\n    },\n    toggleEdit() {\n      this.isEditing = !this.isEditing;\n    },\n    async saveChanges() {\n      try {\n        const formData = new FormData();\n        formData.append('username', this.user.username);\n        formData.append('email', this.user.email);\n\n        // Only add course and gender if they exist, otherwise send empty values\n        // This will make the profile update work even when these fields aren't filled\n        formData.append('course', this.user.course || '');\n        formData.append('gender', this.user.gender || '');\n        formData.append('avatar', this.user.avatar);\n        const response = await fetch(`http://127.0.0.1:8000/profile/${encodeURIComponent(this.user.email)}`, {\n          method: 'PUT',\n          body: formData\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.isEditing = false;\n          alert('Profile updated successfully');\n        } else {\n          alert(data.detail);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert('An error occurred while saving your profile.');\n      }\n    },\n    cancelEdit() {\n      this.isEditing = false;\n    },\n    async loadProfile() {\n      try {\n        const response = await fetch(`http://127.0.0.1:8000/profile/${encodeURIComponent(this.user.email)}`);\n        const data = await response.json();\n        if (response.ok) {\n          this.user = data;\n          if (!this.user.avatar) {\n            this.user.avatar = ''; // Removed default.png reference\n          }\n        } else {\n          alert(data.detail);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert('Failed to load profile.');\n      }\n    },\n    uploadAvatar(event) {\n      const file = event.target.files[0];\n      if (file) {\n        // Check file type on client side first\n        const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/jpg'];\n        if (!allowedTypes.includes(file.type)) {\n          alert(\"Only image files (JPEG, PNG, GIF, WebP) are allowed\");\n          this.$refs.fileInput.value = ''; // Clear the file input\n          return;\n        }\n\n        // Check file size (limit to 5MB)\n        const MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB in bytes\n        if (file.size > MAX_FILE_SIZE) {\n          alert(\"File size exceeds the 5MB limit\");\n          this.$refs.fileInput.value = ''; // Clear the file input\n          return;\n        }\n        const formData = new FormData();\n        formData.append(\"avatar\", file);\n        fetch(`http://127.0.0.1:8000/profile/upload-avatar/${encodeURIComponent(this.user.email)}`, {\n          method: \"POST\",\n          body: formData\n        }).then(response => {\n          if (!response.ok) {\n            return response.json().then(data => {\n              throw new Error(data.detail || \"Failed to upload avatar\");\n            });\n          }\n          return response.json();\n        }).then(data => {\n          if (data.message === \"Avatar uploaded successfully\") {\n            this.user.avatar = data.avatar_url || \"\"; // Removed default.png reference\n            this.saveChanges();\n            alert(\"Profile picture updated successfully\");\n          }\n        }).catch(error => {\n          console.error(\"Error uploading avatar:\", error);\n          alert(error.message || \"An error occurred while uploading the avatar.\");\n          this.$refs.fileInput.value = ''; // Clear the file input\n        });\n      }\n    },\n    triggerFileInput() {\n      this.$refs.fileInput.click();\n    },\n    goToDashboard() {\n      this.$router.push({\n        name: 'Dashboard'\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","user","avatar","username","email","course","gender","isEditing","isDarkMode","localStorage","getItem","mounted","userEmail","loadProfile","document","body","classList","add","methods","toggleDarkMode","setItem","remove","getAvatarUrl","toggleEdit","saveChanges","formData","FormData","append","response","fetch","encodeURIComponent","method","json","ok","alert","detail","error","console","cancelEdit","uploadAvatar","event","file","target","files","allowedTypes","includes","type","$refs","fileInput","value","MAX_FILE_SIZE","size","then","Error","message","avatar_url","catch","triggerFileInput","click","goToDashboard","$router","push","name"],"sources":["D:\\cafe-beata-Inventory-Preorder-main\\cafe-beata-main\\src\\components\\UserProfileCafe.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <div class=\"profile-card\">\n      <!-- Back Button Container -->\n      <div class=\"back-button-container\">\n        <button @click=\"goToDashboard\" class=\"back-to-dashboard-button\">\n          <i class=\"fa fa-arrow-left\"></i>\n        </button>\n      </div>\n\n      <h2>PROFILE</h2>\n\n      <!-- Avatar Section with Upload Button -->\n      <div class=\"avatar-container\">\n        <div class=\"avatar-wrapper\">\n          <!-- Profile Image -->\n          <img :src=\"getAvatarUrl(user.avatar)\" alt=\"Avatar\" class=\"avatar-img\" />\n          <!-- Upload Button with Pencil Icon -->\n          <button @click=\"triggerFileInput\" class=\"upload-icon-btn\">\n            <i class=\"fa fa-pencil\"></i>\n          </button>\n          <!-- Hidden File Input for Avatar Upload -->\n          <input type=\"file\" ref=\"fileInput\" @change=\"uploadAvatar\" style=\"display: none;\" />\n        </div>\n        \n        <!-- Profile Information -->\n        <div class=\"profile-info\">\n          <p class=\"username\">{{ user.username }}</p>\n          <p class=\"email\">{{ user.email }}</p>\n\n          <!-- Line between Email and Course -->\n          <hr class=\"divider\" />\n\n          <!-- Display Course and Gender with left alignment -->\n          <div class=\"left-aligned\">\n            <p class=\"course\"><strong>Course:</strong> {{ user.course }}</p>\n            <p class=\"gender\"><strong>Gender:</strong> {{ user.gender }}</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Profile Edit Section -->\n      <div v-if=\"isEditing\">\n        <div class=\"form-group\">\n          <label>Username:</label>\n          <input v-model=\"user.username\" type=\"text\" disabled />\n        </div>\n        <div class=\"form-group\">\n          <label>E-mail:</label>\n          <input v-model=\"user.email\" type=\"email\" disabled />\n        </div>\n        <div class=\"form-group\">\n          <label>Course:</label>\n          <input v-model=\"user.course\" type=\"text\" />\n        </div>\n        <div class=\"form-group\">\n          <label>Gender:</label>\n          <select v-model=\"user.gender\">\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            <option value=\"Other\">Other</option>\n          </select>\n        </div>\n        <button @click=\"saveChanges\" class=\"save-button\">Save Changes</button>\n        <button @click=\"cancelEdit\" class=\"cancel-button\">Cancel</button>\n      </div>\n\n      <!-- Default View - View Profile Button -->\n      <div v-else>\n        <button @click=\"toggleEdit\" class=\"edit-button\">Edit Profile</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\nexport default {\n  data() {\n    return {\n      user: {\n        avatar: '', // Removed hardcoded default avatar\n        username: '',\n        email: '',\n        course: '',\n        gender: '',\n      },\n      isEditing: false,\n      isDarkMode: localStorage.getItem('darkMode') === 'true', // Load Dark Mode preference\n    };\n  },\n  mounted() {\n    const userEmail = localStorage.getItem('userEmail');\n    if (userEmail) {\n      this.user.email = userEmail;\n      this.loadProfile(); // Load profile on mount\n    }\n\n    // Ensure dark mode is applied when page loads\n    if (localStorage.getItem('darkMode') === 'true') {\n      this.isDarkMode = true; \n      document.body.classList.add('dark-mode');\n    }\n  },\n  methods: {\n    // Toggle Dark Mode and save preference\n    toggleDarkMode() {\n      this.isDarkMode = !this.isDarkMode;\n      localStorage.setItem('darkMode', this.isDarkMode);\n\n      // Apply or remove dark mode class\n      if (this.isDarkMode) {\n        document.body.classList.add('dark-mode');\n      } else {\n        document.body.classList.remove('dark-mode');\n      }\n    },\n\n   getAvatarUrl(avatar) {\n  return avatar ? `http://127.0.0.1:8000${avatar}` : ''; // Removed default.png reference\n\n\n    },\n\n    toggleEdit() {\n      this.isEditing = !this.isEditing;\n    },\n\n    async saveChanges() {\n  try {\n    const formData = new FormData();\n    formData.append('username', this.user.username);\n    formData.append('email', this.user.email);\n    \n    // Only add course and gender if they exist, otherwise send empty values\n    // This will make the profile update work even when these fields aren't filled\n    formData.append('course', this.user.course || '');\n    formData.append('gender', this.user.gender || '');\n    formData.append('avatar', this.user.avatar);\n\n    const response = await fetch(`http://127.0.0.1:8000/profile/${encodeURIComponent(this.user.email)}`, {\n      method: 'PUT',\n      body: formData,\n    });\n\n    const data = await response.json();\n    if (response.ok) {\n      this.isEditing = false;\n      alert('Profile updated successfully');\n    } else {\n      alert(data.detail);\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    alert('An error occurred while saving your profile.');\n      }   \n    },  \n\n    cancelEdit() {\n      this.isEditing = false;\n    },\n\n    async loadProfile() {\n  try {\n    const response = await fetch(`http://127.0.0.1:8000/profile/${encodeURIComponent(this.user.email)}`);\n    const data = await response.json();\n    if (response.ok) {\n      this.user = data;\n      if (!this.user.avatar) {\n        this.user.avatar = ''; // Removed default.png reference\n      }\n    } else {\n      alert(data.detail);\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    alert('Failed to load profile.');\n\n      }\n    },\n\n    uploadAvatar(event) {\n  const file = event.target.files[0];\n  if (file) {\n    // Check file type on client side first\n    const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/jpg'];\n    if (!allowedTypes.includes(file.type)) {\n      alert(\"Only image files (JPEG, PNG, GIF, WebP) are allowed\");\n      this.$refs.fileInput.value = ''; // Clear the file input\n      return;\n    }\n    \n    // Check file size (limit to 5MB)\n    const MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB in bytes\n    if (file.size > MAX_FILE_SIZE) {\n      alert(\"File size exceeds the 5MB limit\");\n      this.$refs.fileInput.value = ''; // Clear the file input\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"avatar\", file);\n\n    fetch(`http://127.0.0.1:8000/profile/upload-avatar/${encodeURIComponent(this.user.email)}`, {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          return response.json().then(data => {\n            throw new Error(data.detail || \"Failed to upload avatar\");\n          });\n        }\n        return response.json();\n      })\n      .then((data) => {\n        if (data.message === \"Avatar uploaded successfully\") {\n          this.user.avatar = data.avatar_url || \"\"; // Removed default.png reference\n          this.saveChanges();\n          alert(\"Profile picture updated successfully\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error uploading avatar:\", error);\n        alert(error.message || \"An error occurred while uploading the avatar.\");\n        this.$refs.fileInput.value = ''; // Clear the file input\n      });\n    }\n  },\n\n    triggerFileInput() {\n      this.$refs.fileInput.click();\n    },\n\n    goToDashboard() {\n      this.$router.push({ name: 'Dashboard' });\n    },\n  },\n};\n</script>\n\n\n\n\n\n\n<style scoped> \n.profile-info {\n  margin-bottom: 20px;\n}\n\n.profile-info p {\n  font-size: 18px;\n  color: #333;\n}\n\n.profile-info strong {\n  color: #007bff;\n}\n\n.divider {\n  margin: 20px 0;\n  border: 0;\n  border-top: 2px solid #333;\n  width: 100%; /* Make it span the entire container width */\n  box-sizing: border-box; /* Include padding in the width calculation */\n  margin-left: 0; /* Reset the margin */\n}\n\n.left-aligned p {\n  text-align: left;\n  margin: 5px 0;\n}\n\n.dark-mode .profile-container {\n  background-color: #222 !important; /* Dark background */\n}\n\n.dark-mode .profile-card {\n  background-color: #333 !important; /* Dark profile card */\n  color: white !important; /* Light text */\n}\n\n/* Dark Mode - Text Adjustments */\n.dark-mode h2,\n.dark-mode label,\n.dark-mode .profile-info p,\n.dark-mode .about-me p {\n  color: white !important; /* Ensure text is light */\n}\n\n/* Dark Mode - Avatar Border */\n.dark-mode .avatar-img {\n  border: 3px solid white !important;\n}\n\n/* Dark Mode - Input Fields */\n.dark-mode input,\n.dark-mode select,\n.dark-mode textarea {\n  background-color: #444 !important;\n  color: white !important;\n  border: 1px solid #666 !important;\n}\n\n/* Dark Mode - Buttons */\n.dark-mode button {\n  background-color: #white !important;\n  color: white !important;\n}\n\n.dark-mode button:hover {\n  background-color: #777 !important;\n}\n\n/* Dark Mode - Profile Info Highlight */\n.dark-mode .profile-info strong {\n  color: rgb(151, 15, 90) !important; /* Make the strong text more visible */\n}\n\n.profile-container {\n  position: relative; /* Ensure this is positioned so that absolute elements inside it can be correctly aligned */\n  padding: 30px;\n  background-color: white;\n  height: 100vh; /* Auto height to fit the content */\n  max-height: 95vh; /* Maximum height to avoid overflowing */\n  overflow-y: auto; /* Enable scrolling if content exceeds the height */\n  transition: height 0.3s ease;  /* Smooth transition when height changes */\n}\n\nh2 {\n  font-size: 28px;\n  color: #333;\n  text-align: center;\n}\n\n.profile-card {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  width: 100%;  /* Ensure it takes up the full width */\n  max-width: 600px;  /* Limit the width on larger screens */\n  margin: 20px auto;\n  position: relative; /* Ensure the buttons can be positioned relative to this container */\n  border: 1px solid #E54F70;\n}\n\n/* Back Button Container - Position it at the top-left of the profile container */\n.back-button-container {\n  position: absolute;\n  top: 10px;\n  left: 10px; /* Position it at the very top-left corner */\n  z-index: 1; /* Ensure it stays above other content */\n}\n\n/* Back Button Styling */\n.back-to-dashboard-button {\n  background-color: transparent;\n  color: rgb(0, 0, 0);\n  padding: 0;\n  font-size: 20px;\n  border: none;\n  cursor: pointer;\n}\n\n/* Icon size inside the button */\n.back-to-dashboard-button i {\n  font-size: 20px;\n  margin: 0; /* Remove extra margin from icon */\n}\n\n/* Avatar Section */\n.avatar-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.avatar-wrapper {\n  position: relative;\n}\n\n.avatar-img {\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  border: 3px solid #333;\n}\n\n.upload-icon-btn {\n  position: absolute;\n  bottom: 0px; /* Place it at the bottom of the circle */\n  right: 0px; /* Place it at the right edge of the circle */\n  background-color: rgb(255, 255, 255); /* No background */\n  border: none; /* No border */\n  padding: 0; /* Remove padding to make it fit the icon */\n  cursor: pointer;\n  font-size: 20px; /* Set size for the pencil icon */\n  color: #007bff; /* Set color for the pencil icon */\n  width: 30px; /* Set width of the clickable area */\n  height: 30px; /* Set height of the clickable area */\n  border-radius: 50%; /* Make the clickable area circular */\n  display: flex;\n  justify-content: center; /* Center the icon inside the button */\n  align-items: center; /* Center the icon vertically */\n}\n\n.upload-icon-btn i {\n  font-size: 20px;\n  color: rgb(235, 175, 175);\n}\n\n/* Profile Information */\n.profile-info {\n  text-align: center;\n}\n\n.username {\n  font-size: 18px;\n  font-weight: bold;\n  color: #333;\n}\n\n.email {\n  font-size: 14px;\n  color: #555;\n}\n\n/* Form Styling */\n.form-group {\n  margin-top: 15px;\n}\n\nlabel {\n  font-size: 16px;\n  color: #555;\n}\n\ninput,\nselect,\ntextarea {\n  margin-top: 5px;\n  padding: 12px;\n  font-size: 16px;\n  width: 95%;\n  border-radius: 6px;\n  border: 1px solid #ccc;\n}\n\ntextarea {\n  resize: vertical;\n}\n\nbutton {\n  margin-top: 10px;\n  padding: 12px;\n  font-size: 16px;\n  background-color: rgb(53, 42, 47);\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  width: 100%;\n}\n\nbutton:hover {\n  background-color: rgb(68, 63, 57);\n}\n\n.save-button,\n.cancel-button {\n  background-color: rgb(31, 32, 31);\n}\n\n.save-button:hover,\n.cancel-button:hover {\n  background-color: rgb(26, 27, 27);\n}\n\n.edit-button {\n  padding: 1px 1px;\n  font-size: 10px;\n  background-color: transparent;\n  color: #FFF;\n  border: 2px solid #d12f7a;\n  cursor: pointer;\n  position: relative;\n  z-index: 0;\n  border-radius: 5px;\n  text-transform: uppercase;\n}\n\n.edit-button::after {\n  content: \"\";\n  z-index: -1;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: rgb(31, 32, 31);\n  left: 0;\n  top: 0;\n  border-radius: 10px;\n}\n\n.edit-button::before {\n  content: \"\";\n  background: linear-gradient(\n    45deg,\n    #FF0000, #FF7300, #FFFB00, #48FF00,\n    #00FFD5, #002BFF, #FF00C8, #FF0000\n  );\n  position: absolute;\n  top: -2px;\n  left: -2px;\n  background-size: 600%;\n  z-index: -1;\n  width: calc(100% + 4px);\n  height: calc(100% + 4px);\n  filter: blur(8px);\n  animation: glowing 20s linear infinite;\n  transition: opacity .3s ease-in-out;\n  border-radius: 10px;\n  opacity: 0;\n}\n\n.edit-button:hover::before {\n  opacity: 1;\n}\n\n.edit-button {\n  color: white;\n  padding: 6px 12px;\n  font-size: 12px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n}\n\n.edit-button:hover {\n  background-color: #0056b3;\n}\n\n.profile-info {\n  margin-bottom: 20px;\n}\n\n.profile-info p {\n  font-size: 18px;\n  color: #333;\n}\n\n.profile-info strong {\n  color: rgb(114, 53, 68);\n}\n\n.about-me {\n  margin-top: 30px;\n  text-align: center;\n}\n\n.about-me p {\n  font-size: 16px;\n  color: #555;\n}\n\n/* Mobile responsiveness */\n@media (max-width: 768px) {\n  .profile-container {\n    padding: 10px; /* Adjust padding for smaller screens */\n  }\n\n  /* Ensure the profile card stays centered with proper margins */\n  .profile-card {\n    margin: 60px auto;\n    padding: 50px;\n    width: auto;  /* Make the profile card responsive */\n    max-width: none; /* Remove any max-width on smaller screens */\n  }\n\n  /* Back Button - position at top-left on mobile */\n  .back-button-container {\n    top: 10px;\n    left: 10px; /* Position back button at the top-left of the screen */\n  }\n\n  /* Ensure edit button stays at the bottom */\n  .edit-button {\n    font-size: 14px; /* Slightly smaller font for mobile */\n    margin-top: 20px; /* Add margin between content and button */\n  }\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}