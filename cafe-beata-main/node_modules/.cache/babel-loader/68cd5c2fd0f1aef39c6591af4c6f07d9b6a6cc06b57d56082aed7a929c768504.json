{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport LoginPage from './components/LoginPage.vue';\nimport DashboardPage from './components/DashboardPage.vue';\nimport ConfirmOrder from './components/ConfirmOrder.vue'; // Import the ConfirmOrder component\nimport OrderIDPage from './components/OrderIDPage.vue'; // Import the OrderIDPage component\nimport OrderHistory from './components/OrderHistory.vue'; // Import OrderHistory component\nimport OrderDetails from './components/OrderDetails.vue'; // Import OrderDetails component\nimport UserProfileCafe from './components/UserProfileCafe.vue'; // Import the renamed UserProfileCafe component\nimport CreateAccountPage from './components/CreateAccountPage.vue';\nimport ForgotPassword from '@/components/ForgotPassword.vue'; // Make sure the path is correct\nimport PrivacyAndPolicy from './components/PrivacyAndPolicy.vue'; // Import PrivacyAndPolicy component\nimport AdminPage from './admin/AdminPage.vue';\nimport NotificationsPage from './admin/NotificationsPage.vue';\nimport ChangePassword from './components/ChangePassword.vue';\nimport OrderRecord from './components/OrderRecord.vue'; // Ensure this is correctly imported\nimport UserNotifications from './components/UserNotifications.vue';\nimport CafeBeata from './components/CafeBeata.vue';\nconst routes = [{\n  path: '/cafe-beata',\n  name: 'CafeBeata',\n  component: CafeBeata\n}, {\n  path: '/user-notifications',\n  name: 'UserNotifications',\n  component: UserNotifications\n}, {\n  path: '/',\n  redirect: '/cafe-beata' // Set this to redirect to login as default\n}, {\n  path: '/order-record',\n  name: 'OrderRecord',\n  component: OrderRecord\n}, {\n  path: '/reset-password/:token',\n  name: 'reset-password',\n  component: ChangePassword\n}, {\n  path: '/login',\n  name: 'Login',\n  component: LoginPage\n}, {\n  path: '/forgot-password',\n  name: 'ForgotPassword',\n  component: ForgotPassword\n}, {\n  path: '/notifications',\n  name: 'Notifications',\n  component: NotificationsPage\n}, {\n  path: '/admin',\n  name: 'AdminPage',\n  component: AdminPage\n}, {\n  path: '/dashboard',\n  name: 'Dashboard',\n  component: DashboardPage,\n  beforeEnter: (to, from, next) => {\n    if (localStorage.getItem('loggedIn') === 'true') {\n      next();\n    } else {\n      next({\n        name: 'Login'\n      });\n    }\n  }\n}, {\n  path: '/confirm-order',\n  name: 'ConfirmOrder',\n  component: ConfirmOrder,\n  props: route => ({\n    name: route.query.name,\n    price: route.query.price,\n    image: route.query.image\n  })\n}, {\n  path: '/order-id',\n  name: 'OrderIDPage',\n  component: OrderIDPage,\n  props: true\n}, {\n  path: '/create-account',\n  name: 'CreateAccount',\n  component: CreateAccountPage\n}, {\n  path: '/order-history',\n  name: 'OrderHistory',\n  component: OrderHistory\n}, {\n  path: '/order-details',\n  name: 'OrderDetails',\n  component: OrderDetails,\n  props: route => ({\n    orderId: route.query.orderId,\n    date: route.query.date,\n    billName: route.query.billName,\n    total: route.query.total,\n    items: JSON.parse(route.query.items || '[]')\n  })\n}, {\n  path: '/user-profile-cafe',\n  name: 'UserProfileCafe',\n  component: UserProfileCafe\n}, {\n  path: '/privacy-policy',\n  name: 'PrivacyPolicy',\n  component: PrivacyAndPolicy\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginPage","DashboardPage","ConfirmOrder","OrderIDPage","OrderHistory","OrderDetails","UserProfileCafe","CreateAccountPage","ForgotPassword","PrivacyAndPolicy","AdminPage","NotificationsPage","ChangePassword","OrderRecord","UserNotifications","CafeBeata","routes","path","name","component","redirect","beforeEnter","to","from","next","localStorage","getItem","props","route","query","price","image","orderId","date","billName","total","items","JSON","parse","router","history","process","env","BASE_URL"],"sources":["D:/cafe-beata-Inventory-Preorder-main/cafe-beata-main/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport LoginPage from './components/LoginPage.vue';\nimport DashboardPage from './components/DashboardPage.vue';\nimport ConfirmOrder from './components/ConfirmOrder.vue'; // Import the ConfirmOrder component\nimport OrderIDPage from './components/OrderIDPage.vue'; // Import the OrderIDPage component\nimport OrderHistory from './components/OrderHistory.vue'; // Import OrderHistory component\nimport OrderDetails from './components/OrderDetails.vue'; // Import OrderDetails component\nimport UserProfileCafe from './components/UserProfileCafe.vue'; // Import the renamed UserProfileCafe component\nimport CreateAccountPage from './components/CreateAccountPage.vue'; \nimport ForgotPassword from '@/components/ForgotPassword.vue'; // Make sure the path is correct\nimport PrivacyAndPolicy from './components/PrivacyAndPolicy.vue'; // Import PrivacyAndPolicy component\nimport AdminPage from './admin/AdminPage.vue'; \nimport NotificationsPage from './admin/NotificationsPage.vue';\nimport ChangePassword from './components/ChangePassword.vue';\nimport OrderRecord from './components/OrderRecord.vue';  // Ensure this is correctly imported\nimport UserNotifications from './components/UserNotifications.vue';\nimport CafeBeata from './components/CafeBeata.vue';\n\nconst routes = [\n\n  {\n    path: '/cafe-beata',\n    name: 'CafeBeata',\n    component: CafeBeata,\n  },\n\n\n\n  {\n    path: '/user-notifications',\n    name: 'UserNotifications',\n    component: UserNotifications,\n  },\n  \n  {\n    path: '/',\n    redirect: '/cafe-beata',  // Set this to redirect to login as default\n  },\n\n  {\n    path: '/order-record',\n    name: 'OrderRecord',\n    component: OrderRecord,\n  },\n\n  {\n    path: '/reset-password/:token',\n    name: 'reset-password',\n    component: ChangePassword,\n  },\n\n  {\n    path: '/login',\n    name: 'Login',\n    component: LoginPage,\n  },\n\n  {\n    path: '/forgot-password',\n    name: 'ForgotPassword',\n    component: ForgotPassword,\n  },\n\n  {\n    path: '/notifications', \n    name: 'Notifications',\n    component: NotificationsPage, \n  },\n\n  {\n    path: '/admin', \n    name: 'AdminPage',\n    component: AdminPage,\n  },\n\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: DashboardPage,\n    beforeEnter: (to, from, next) => {\n      if (localStorage.getItem('loggedIn') === 'true') {\n        next();\n      } else {\n        next({ name: 'Login' });\n      }\n    },\n  },\n  {\n    path: '/confirm-order', \n    name: 'ConfirmOrder',\n    component: ConfirmOrder,\n    props: route => ({\n      name: route.query.name,   \n      price: route.query.price,\n      image: route.query.image, \n    }),\n  },\n  {\n    path: '/order-id',\n    name: 'OrderIDPage',\n    component: OrderIDPage,\n    props: true,\n  },\n  {\n    path: '/create-account',  \n    name: 'CreateAccount',\n    component: CreateAccountPage,\n  },\n\n  {\n    path: '/order-history',\n    name: 'OrderHistory',\n    component: OrderHistory,\n  },\n\n  {\n    path: '/order-details',\n    name: 'OrderDetails',\n    component: OrderDetails,\n    props: route => ({\n      orderId: route.query.orderId,\n      date: route.query.date,\n      billName: route.query.billName,\n      total: route.query.total,\n      items: JSON.parse(route.query.items || '[]'),\n    }),\n  },\n\n  {\n    path: '/user-profile-cafe', \n    name: 'UserProfileCafe',\n    component: UserProfileCafe,  \n  },\n\n  {\n    path: '/privacy-policy', \n    name: 'PrivacyPolicy',\n    component: PrivacyAndPolicy,\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}