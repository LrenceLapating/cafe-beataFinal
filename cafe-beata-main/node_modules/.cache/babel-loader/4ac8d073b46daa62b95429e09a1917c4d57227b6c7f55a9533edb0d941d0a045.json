{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"order-history\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"order-table\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToOrderHistory && $options.goToOrderHistory(...args)),\n    class: \"back-button\"\n  }, \"← Back To Menu\")]), _createElementVNode(\"div\", {\n    class: _normalizeClass({\n      'dark-mode': $data.isDarkMode\n    })\n  }, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"Order History\", -1 /* HOISTED */)), _createCommentVNode(\" Search Bar \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchQuery = $event),\n    onInput: _cache[2] || (_cache[2] = (...args) => $options.filterOrders && $options.filterOrders(...args)),\n    placeholder: \"Search by Order ID, Order Date, or Bill Name\",\n    class: \"search-bar\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.searchQuery]])], 2 /* CLASS */), _createCommentVNode(\" Display Orders only when orders array is available \"), $data.filteredOrders.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Order No. (ID)\"), _createElementVNode(\"th\", null, \"Order Date\"), _createElementVNode(\"th\", null, \"Bill Name\"), _createElementVNode(\"th\", null, \"Action\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredOrders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.id), 1 /* TEXT */), _createElementVNode(\"td\", {\n      innerHTML: $options.formatDate(order.created_at)\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"td\", null, _toDisplayString(order.customer_name), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.viewOrderDetails(order),\n      class: \"view-details-button\"\n    }, \"View Details\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" No Orders Message \"), _cache[5] || (_cache[5] = _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"No orders found. Add some orders from the dashboard.\")], -1 /* HOISTED */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","goToOrderHistory","_normalizeClass","$data","isDarkMode","_createCommentVNode","type","$event","searchQuery","onInput","filterOrders","placeholder","filteredOrders","length","_hoisted_3","_Fragment","_renderList","order","id","_toDisplayString","innerHTML","formatDate","created_at","_hoisted_4","customer_name","viewOrderDetails","_hoisted_5"],"sources":["D:\\cafe-beata-Inventory-Preorder-main\\cafe-beata-main\\src\\components\\OrderHistory.vue"],"sourcesContent":["<template>\n  <div class=\"order-history\">\n    <div class=\"header\">\n      <button @click=\"goToOrderHistory\" class=\"back-button\">← Back To Menu</button>\n    </div>\n    <div :class=\"{ 'dark-mode': isDarkMode }\">\n      <h1>Order History</h1>\n\n      <!-- Search Bar -->\n      <input \n        type=\"text\" \n        v-model=\"searchQuery\" \n        @input=\"filterOrders\" \n        placeholder=\"Search by Order ID, Order Date, or Bill Name\" \n        class=\"search-bar\"\n      />\n    </div>\n\n    <!-- Display Orders only when orders array is available -->\n    <table class=\"order-table\" v-if=\"filteredOrders.length\">\n      <thead>\n        <tr>\n          <th>Order No. (ID)</th>\n          <th>Order Date</th>\n          <th>Bill Name</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"order in filteredOrders\" :key=\"order.id\">\n          <td>{{ order.id }}</td>\n          <td v-html=\"formatDate(order.created_at)\"></td>\n          <td>{{ order.customer_name }}</td>\n          \n          <td>\n            <button @click=\"viewOrderDetails(order)\" class=\"view-details-button\">View Details</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- No Orders Message -->\n    <div v-else>\n      <p>No orders found. Add some orders from the dashboard.</p>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  data() {\n    return {\n      isDarkMode: localStorage.getItem('darkMode') === 'true', // Detects dark mode\n      orders: [], // Store the fetched orders\n      searchQuery: '', // Store search query input\n      filteredOrders: [], // Store filtered orders based on search\n    };\n  },\n  methods: {\n    goToOrderHistory() {\n      this.$router.push({ name: 'Dashboard' });\n    },\n\n    fetchOrders() {\n      const userName = localStorage.getItem('userName'); \n\n      if (!userName) {\n        console.error(\"User name not found in localStorage.\");\n        return;\n      }\n\n      fetch(`http://127.0.0.1:8000/orders?customer_name=${userName}&status=completed`) // Fetch completed orders\n        .then(response => response.json())\n        .then(data => {\n          if (data.orders) {\n            // Sort orders by created_at date in descending order (newest first)\n            this.orders = data.orders.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n            this.filteredOrders = this.orders; // Initially set filteredOrders to all orders\n          } else {\n            this.orders = [];\n            this.filteredOrders = [];\n            console.error(\"No completed orders found for this user.\");\n          }\n        })\n        .catch(error => console.error(\"Error fetching orders:\", error));\n    },\n\n    filterOrders() {\n      if (this.searchQuery === '') {\n        this.filteredOrders = this.orders;\n      } else {\n        const query = this.searchQuery.toLowerCase();\n        this.filteredOrders = this.orders.filter(order => {\n          return (\n            order.id.toString().includes(query) || \n            order.customer_name.toLowerCase().includes(query) ||\n            order.created_at.toLowerCase().includes(query)\n          );\n        }).sort((a, b) => {\n          // Prioritize orders that start with the search query\n          const aStartsWith = a.id.toString().startsWith(query) ? 1 : 0;\n          const bStartsWith = b.id.toString().startsWith(query) ? 1 : 0;\n          const aIncludes = a.id.toString().includes(query) ? 1 : 0;\n          const bIncludes = b.id.toString().includes(query) ? 1 : 0;\n          return (bStartsWith - aStartsWith) || (bIncludes - aIncludes) || (a.id - b.id);\n        });\n      }\n    },\n\n    // Method to format the order date\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const day = date.getDate().toString().padStart(2, '0');\n      const year = date.getFullYear();\n      const hours = date.getHours();\n      const minutes = date.getMinutes().toString().padStart(2, '0');\n      const period = hours >= 12 ? 'PM' : 'AM';\n      const hour12 = (hours % 12 || 12).toString().padStart(2, '0');\n      \n      // Format date and time separately\n      const datePart = `${month}-${day}-${year}`;\n      const timePart = `${hour12}:${minutes} ${period}`;\n      \n      return `${datePart} <span class=\"highlighted-time\">${timePart}</span>`;\n    },\n\n    viewOrderDetails(order) {\n      // Ensure each item has its image path preserved\n      const itemsWithImages = order.items.map(item => {\n        let imagePath = item.image;\n        \n        // If the item has an image from the backend\n        if (imagePath) {\n          // If it's already a full URL\n          if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\n            // Keep the URL as is\n          }\n          // If it's a backend upload path (starting with /uploads)\n          else if (imagePath.startsWith('/uploads/')) {\n            imagePath = `http://localhost:8000${imagePath}`;\n          }\n          // If it's just a filename, assume it's in uploads/avatars\n          else if (!imagePath.includes('/')) {\n            imagePath = `http://localhost:8000/uploads/avatars/${imagePath}`;\n          }\n        }\n\n        return {\n          ...item,\n          image: imagePath // Keep the image path as is, don't set to null\n        };\n      });\n\n      this.$router.push({\n        name: \"OrderDetails\",\n        query: {\n          orderId: order.id,\n          customerName: order.customer_name,\n          items: JSON.stringify(itemsWithImages)\n        },\n      });\n    },\n  },\n  mounted() {\n    this.fetchOrders(); // Fetch orders when the component is mounted\n  },\n  watch: {\n    isDarkMode(newValue) {\n      document.body.classList.toggle('dark-mode', newValue);\n    },\n  },\n};\n</script>\n\n\n\n<style scoped>\n\n.search-bar {\n  margin: 20px 0;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 10px;\n  border: 1px solid #ddd;\n  width: 90%;\n  max-width: 400px;\n  display: block;\n}\n\n\n\n/* Light mode styles */\n.order-history {\n  padding: 20px;\n  font-family: Arial, sans-serif;\n  background-color: white; /* Changed to white background */\n  color: #222; /* Dark text for light background */\n  height: 110vh; /* Auto height to fit the content */\n  max-height: 95vh; /* Maximum height to avoid overflowing */\n  overflow-y: auto; /* Enable scrolling if content exceeds the height */\n  transition: height 0.3s ease;  /* Smooth transition when height changes */\n  \n}\n\n.order-table th {\n  background-color: #ffffff; /* White background for table headers */\n  color: #333; /* Dark text for better visibility */\n  border-color: #ddd; /* Light border */\n}\n\n.order-table td {\n  background-color: #ffffff; /* White background for table data */\n  color: #333; /* Dark text */\n  border-color: #ddd; /* Light border */\n}\n\n.order-table td button {\n  background-color: rgb(31, 28, 29); /* Button color */\n  color: white;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.order-table td button:hover {\n  background-color: #b82d67; /* Hover color */\n}\n\n/* Dark mode styles (still included for the future or switch) */\n.dark-mode .order-table td {\n  color: #fff; /* White text for better visibility */\n  background-color: #333; /* Dark background for table data */\n  border-color: #444; /* Darker borders */\n}\n\n.dark-mode .order-table th {\n  background-color: #222; /* Dark background for header */\n  color: #fff; /* White text for visibility */\n  border-color: #444; /* Darker borders */\n}\n\n.dark-mode .order-history {\n  color: #ccc; /* Lighter text color for better contrast */\n  background-color: #1d1d1d; /* Dark background */\n}\n\n.dark-mode h1,\n.dark-mode .order-table th,\n.dark-mode .order-table td {\n  color: #fff; /* White text for dark mode */\n}\n\n/* Glowing effect for the \"Back To Menu\" button */\n.back-button {\n  padding: 10px 20px;\n  font-size: 14px;\n  background-color: transparent;\n  color: #FFF;\n  cursor: pointer;\n  border-radius: 5px;\n  text-transform: uppercase;\n  position: relative;\n  z-index: 0;\n  border: none;\n}\n\n.back-button::after {\n  content: \"\";\n  z-index: -1;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: #444; /* Darker background */\n  left: 0;\n  top: 0;\n  border-radius: 10px;\n}\n\n.back-button::before {\n  content: \"\";\n  background: linear-gradient(\n    45deg,\n    #FF0000, #FF7300, #FFFB00, #48FF00,\n    #00FFD5, #002BFF, #FF00C8, #FF0000\n  );\n  position: absolute;\n  top: -2px;\n  left: -2px;\n  background-size: 600%;\n  z-index: -1;\n  width: calc(100% + 4px);\n  height: calc(100% + 4px);\n  filter: blur(8px);\n  animation: glowing 20s linear infinite;\n  transition: opacity .3s ease-in-out;\n  border-radius: 10px;\n  opacity: 0;\n}\n\n/* Hover effect for glowing */\n.back-button:hover::before {\n  opacity: 1;\n}\n\n/* Active button state */\n.back-button:active:after {\n  background: transparent;\n}\n\n.back-button:active {\n  color: #000;\n  font-weight: bold;\n  background-color: #d12f7a;\n}\n\n/* Glowing effect for the \"View Details\" button */\n.view-details-button {\n  padding: 10px 20px;\n  font-size: 14px;\n  background-color: transparent;\n  color: #FFF;\n  cursor: pointer;\n  position: relative;\n  z-index: 0;\n  border-radius: 10px;\n  text-transform: uppercase;\n  border: none;\n}\n\n.view-details-button::after {\n  content: \"\";\n  z-index: -1;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: #444; /* Darker background */\n  left: 0;\n  top: 0;\n  border-radius: 10px;\n}\n\n.view-details-button::before {\n  content: \"\";\n  background: linear-gradient(\n    45deg,\n    #FF0000, #FF7300, #FFFB00, #48FF00,\n    #00FFD5, #002BFF, #FF00C8, #FF0000\n  );\n  position: absolute;\n  top: -2px;\n  left: -2px;\n  background-size: 600%;\n  z-index: -1;\n  width: calc(100% + 4px);\n  height: calc(100% + 4px);\n  filter: blur(8px);\n  animation: glowing 20s linear infinite;\n  transition: opacity .3s ease-in-out;\n  border-radius: 10px;\n  opacity: 0;\n}\n\n/* Hover effect for glowing */\n.view-details-button:hover::before {\n  opacity: 1;\n}\n\n/* Active button state */\n.view-details-button:active:after {\n  background: transparent;\n}\n\n.view-details-button:active {\n  color: #000;\n  font-weight: bold;\n  background-color: #d12f7a;\n}\n\n/* Glow Animation */\n@keyframes glowing {\n  0% {background-position: 0 0;}\n  50% {background-position: 400% 0;}\n  100% {background-position: 0 0;}\n}\n\nh1 {\n  font-size: 28px;\n  color: #333; /* Dark text for light mode */\n}\n\n.order-table {\n  width: 100%;\n  margin-top: 20px;\n  border-collapse: collapse;\n}\n\n.order-table th, .order-table td {\n  padding: 10px;\n  border: 1px solid #ddd; /* Lighter border for light mode */\n  text-align: center;\n}\n\n.order-table th {\n  background-color: #f4f4f4; /* Light header background */\n}\n\n.order-table td button {\n  background-color: rgb(31, 28, 29);\n  color: white;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.order-table td button:hover {\n  background-color: #b82d67;\n}\n\n/* 📱 Mobile Responsive Adjustments */\n@media (max-width: 768px) {\n  .order-table th, .order-table td {\n    padding: 8px;\n    font-size: 14px;\n  }\n\n  .order-table td button {\n    font-size: 12px;\n  }\n}\n\n/* Add this at the end of your style section */\n.highlighted-time {\n  color: #d12f7a;\n  font-weight: bold;\n  background-color: #f8d2e4;\n  padding: 2px 6px;\n  border-radius: 4px;\n  margin-left: 4px;\n}\n\n.dark-mode .highlighted-time {\n  color: #f8d2e4;\n  background-color: #d12f7a;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAQ;;EAFvBC,GAAA;EAmBWD,KAAK,EAAC;;mBAnBjB;mBAAA;;uBACEE,mBAAA,CA4CM,OA5CNC,UA4CM,GA3CJC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAA6E;IAApEE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;IAAER,KAAK,EAAC;KAAc,gBAAc,E,GAEtEI,mBAAA,CAWM;IAXAJ,KAAK,EALfW,eAAA;MAAA,aAKgCC,KAAA,CAAAC;IAAU;gCACpCT,mBAAA,CAAsB,YAAlB,eAAa,sBAEjBU,mBAAA,gBAAmB,E,gBACnBV,mBAAA,CAME;IALAW,IAAI,EAAC,MAAM;IAVnB,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAWiBJ,KAAA,CAAAK,WAAW,GAAAD,MAAA;IACnBE,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAU,YAAA,IAAAV,QAAA,CAAAU,YAAA,IAAAX,IAAA,CAAY;IACpBY,WAAW,EAAC,8CAA8C;IAC1DpB,KAAK,EAAC;iEAHGY,KAAA,CAAAK,WAAW,E,oBAOxBH,mBAAA,wDAA2D,EAC1BF,KAAA,CAAAS,cAAc,CAACC,MAAM,I,cAAtDpB,mBAAA,CAoBQ,SApBRqB,UAoBQ,G,0BAnBNnB,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAuB,YAAnB,gBAAc,GAClBA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAe,YAAX,QAAM,E,wBAGdA,mBAAA,CAUQ,iB,kBATNF,mBAAA,CAQKsB,SAAA,QArCbC,WAAA,CA6B4Bb,KAAA,CAAAS,cAAc,EAAvBK,KAAK;yBAAhBxB,mBAAA,CAQK;MARgCD,GAAG,EAAEyB,KAAK,CAACC;QAC9CvB,mBAAA,CAAuB,YAAAwB,gBAAA,CAAhBF,KAAK,CAACC,EAAE,kBACfvB,mBAAA,CAA+C;MAA3CyB,SAAqC,EAA7BpB,QAAA,CAAAqB,UAAU,CAACJ,KAAK,CAACK,UAAU;4BA/BjDC,UAAA,GAgCU5B,mBAAA,CAAkC,YAAAwB,gBAAA,CAA3BF,KAAK,CAACO,aAAa,kBAE1B7B,mBAAA,CAEK,aADHA,mBAAA,CAA0F;MAAjFE,OAAK,EAAAU,MAAA,IAAEP,QAAA,CAAAyB,gBAAgB,CAACR,KAAK;MAAG1B,KAAK,EAAC;OAAsB,cAAY,iBAnC7FmC,UAAA,E;uDA0CIjC,mBAAA,CAEMsB,SAAA;IA5CVvB,GAAA;EAAA,IAyCIa,mBAAA,uBAA0B,E,0BAC1BV,mBAAA,CAEM,cADJA,mBAAA,CAA2D,WAAxD,sDAAoD,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}